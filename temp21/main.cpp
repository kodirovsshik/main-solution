
#pragma warning(disable : 4067 4326)

#include <random>;
#include <format>;
#include <iostream>;
#include <tuple>;
#include <compare>;

//gets 49 bits right for -1.4 <= x <= 0
template<class fp_t>
fp_t stdnorm_cdf_series_basic(fp_t data)
{
	using std::abs;

	const fp_t x2 = data * data;
	data /= 2.50662827463100050241576528481L;

	fp_t s = 0.5, s1;

	fp_t ds;
	size_t k = 0;
	while (true)
	{
		ds = data / (2 * k + 1);

		s1 = s + ds;
		if (s1 == s)
			break;
		s = s1;

		++k;
		data = data * (-0.5) / k * x2;
	}

	return s1;
}


template<class fp_t>
fp_t stdnorm_cdf_nc6_basic(fp_t data)
{
	constexpr int steps = 250;
	const fp_t h = data / (fp_t)(steps * 4);

	auto f = [](const fp_t & data)
	{
		using std::exp;
		return exp(data * data / (fp_t)-2);
	};

	static const fp_t C = sqrt(2 * 3.1415926535897932384626433832795) * 22.5;

	data = 0;
	fp_t f_last = f(data), f1{}, f2{}, f3{}, f4{};
	fp_t s = C / 2, ds;
	for (int i = 1; i <= steps; ++i)
	{
		data += h;
		f1 = f(data);
		data += h;
		f2 = f(data);
		data += h;
		f3 = f(data);
		data += h;
		f4 = f(data);

		//std::cout << std::format("\n{}", i);

		ds = (fp_t)7 * (f_last + f4) + (fp_t)32 * (f1 + f3) + (fp_t)12 * f2;
		ds *= h;
		//std::cout << std::format(", {:.26f}", ds);
		s += ds;
		//std::cout << std::format(", {:.26f}", s);

		f_last = f4;
	}
	s /= C;
	return s;
}



#include <algorithm>;
#include <intrin.h>;



struct _xuint128
{
	uint64_t data[2];

	auto&& operator[](this auto&& self, size_t n) noexcept
	{
		return self.data[n];
	}

	static _xuint128 from_multiplication(uint64_t a, uint64_t b)
	{
		_xuint128 x;
		x[0] = _umul128(a, b, (unsigned long long*)&x[1]);
		return x;
	}

	void sub(const _xuint128& other)
	{
		unsigned char carry = 0;
		carry = _subborrow_u64(carry, data[0], other.data[0], (unsigned long long*) & data[0]);
		carry = _subborrow_u64(carry, data[1], other.data[1], (unsigned long long*) & data[1]);
	}
	void sub(uint64_t x)
	{
		data[1] -= _subborrow_u64(0, data[0], x, (unsigned long long*)&data[0]);
	}
	void mul(uint64_t x)
	{
		uint64_t carry = 0, _;
		this->data[0] = _umul128(this->data[0], x, (unsigned long long*)&carry);
		this->data[1] = _umul128(this->data[1], x, (unsigned long long*)&_);
		this->data[1] += carry;
	}
	void shr1()
	{
		this->data[0] = (this->data[0] >> 1) | (this->data[1] << 63);
		this->data[1] >>= 1;
	}
	uint64_t div64_result(uint64_t divisor) const
	{
		unsigned long long __unused;
		return _udiv128(this->data[1], this->data[0], divisor, &__unused);
	}

	friend std::strong_ordering operator<=>(_xuint128 a, _xuint128 b) noexcept
	{
		for (int i = 1; i >= 0; --i)
			if (a[i] != b[i])
				return a[i] <=> b[i];
		return std::strong_ordering::equal;
	}

	bool operator==(const _xuint128&) const = default;
};

/*
Computes 2^64 * a / (2^64 + b)
No overflow occurs
Result rounded towards nearest integer
*/
uint64_t _divround_mantissas_transformed(uint64_t a, uint64_t b)
{
	constexpr static bool enable_rounding = false;

	_xuint128 dividend{ 0, a }, divisor{ b, 1 };

	//Numerator and demoninator are integer-divided by 2 to get 127/64 bit division
	//This approximates division precisely enough with error range [-1; 1]

	uint64_t approx_quotient;

	dividend.shr1();
	const uint64_t b2 = (b >> 1) | (1ull << 63);
	approx_quotient = dividend.div64_result(b2);

	divisor.mul(approx_quotient);
	auto& remultiplied = divisor;

	//if remultiplied > dividend
	if (remultiplied[1] == a && remultiplied[0] > 0)
	{
		approx_quotient--;
		remultiplied.sub({b, 1});
		dividend = { 0, a };
		dividend.sub(remultiplied);
	}
	else
	{
		dividend = { 0, a };
		dividend.sub(remultiplied);
		if (dividend[1] == 1 && dividend[0] >= b)
		{
			++approx_quotient;
			dividend.sub({ b, 1 });
		}
	}

	auto remainder = dividend;

	//dividend = { 0, a }, divisor = { b, 1 };
	//divisor.mul(approx_quotient);
	//dividend.sub(divisor);
	//if (dividend != remainder)
	//	__debugbreak();

	if constexpr (enable_rounding)
	{
		if (remainder[1] || remainder[0] >= b2)
			++approx_quotient;
	}

	return approx_quotient;
}

void _divround_mantissas_transformed_test(uint64_t a, uint64_t b)
{
	uint64_t x = _divround_mantissas_transformed(a, b);

	_xuint128 expected, observed, divisor{ b, 1 };
	expected = { 0, a };
	observed = _xuint128::from_multiplication(x, b);
	observed[1] += x;

	if (observed > expected)
		__debugbreak();

	_xuint128 remainder = expected;
	remainder.sub(observed);
	if (remainder >= divisor)
		__debugbreak();
}

uint64_t div128_65(_xuint128 a, uint64_t b)
{
	if (a[1] == 0)
		return 0;

	auto A = a[1];
	auto B = a[0];
	auto C = b;
	a = _xuint128::from_multiplication(A, C);
	a.sub(B);

	return A - div128_65(a, b);
}
//
//uint64_t _foo0(uint64_t _a, uint64_t _b)
//{
//	uint64_t k0, k1;
//	k1 = _a / _b;
//	if (k1 == 0)
//	{
//
//	}
//	return 0;
//}
uint64_t _foo(uint64_t _a, uint64_t _b)
{
	/*
	a-b, 0
	1, b
	*/
	_xuint128 a{ 0, _a - _b }, b{ _b, 1 };
	auto b1 = b;

	auto k = a[1] / b[1];
	k -= (_b != 0);
	b1.mul(k);
	a.sub(b1);

	const auto b2 = (_b >> 1) | (1ull << 63);
	k += a[0] >= b2;

	return k;
}




template<size_t N>
void long_multiply(const int64_t(&a)[N], const int64_t(&b)[N], int64_t(&c)[2 * N])
{
	using ull = unsigned long long;

	static constexpr size_t N2 = 2 * N;
	const int64_t sign[2]{ a[N - 1] >> 63, b[N - 1] >> 63 };

	for (size_t i = 0; i < N2; ++i)
	{
		uint64_t tmp[N2]{};

		uint64_t multiplication_carry = 0;
		for (size_t j = 0; j < N2 - i; ++j)
		{
			uint64_t l, h;
			l = _umul128(
				i < N ? a[i] : sign[0], 
				j < N ? b[j] : sign[1], 
				&h
			);
		
			tmp[j] = l + multiplication_carry; //Never goes above UINT64_MAX because apparently math can have mercy sometimes
			multiplication_carry = h;
		}

		unsigned char addition_carry = 0;
		for (size_t j = i; j < N2; ++j)
			addition_carry = _addcarry_u64(addition_carry, tmp[j - i], c[j], (ull*)&c[j]);
	}
}

class ppfloat
{
private:
public:
	uint64_t m_exponent : 63 = 0;
	bool m_sign : 1 = 0;
	uint64_t m_mantissa = 0;

public:
	static constexpr uint64_t exponent_bias = INT64_MAX / 2;

	friend ppfloat operator*(ppfloat a, ppfloat b) noexcept;
	friend ppfloat operator/(ppfloat a, ppfloat b) noexcept;

	operator double() const noexcept;
};

ppfloat operator/(ppfloat a, ppfloat b) noexcept
{
	static constexpr uint64_t bit63 = (uint64_t(1) << 63);

	const uint64_t ma = a.m_mantissa;
	const uint64_t mb = b.m_mantissa;

	auto mantissa = _foo(ma, mb);

	ppfloat result;
	result.m_exponent = a.m_exponent - (b.m_exponent - ppfloat::exponent_bias);
	result.m_mantissa = mantissa;
	result.m_sign = a.m_sign ^ b.m_sign;
	return result;
}
//ppfloat operator/(ppfloat a, ppfloat b) noexcept
//{
//	static constexpr uint64_t bit63 = (uint64_t(1) << 63);
//
//	const uint64_t ma = a.m_mantissa;
//	const uint64_t mb = b.m_mantissa;
//
//	const uint64_t md = ma >= mb ? ma - mb : mb - ma;
//
//	const uint64_t l = (md & 1) << 63;
//	const uint64_t h = (md >> 1);
//	uint64_t remainder;
//	uint64_t mantissa;
//
//	mantissa = _udiv128(h, l, (mb >> 1) | bit63, &remainder);
//
//	ppfloat result;
//	result.m_exponent = a.m_exponent - (b.m_exponent - ppfloat::exponent_bias);
//	result.m_mantissa = mantissa;
//	result.m_sign = a.m_sign ^ b.m_sign;
//	return result;
//}

ppfloat::operator double() const noexcept
{
	const int64_t exponent = this->m_exponent - this->exponent_bias;
	if (exponent < INT_MIN)
		return 0;
	if (exponent > INT_MAX)
		return this->m_sign ? -INFINITY : INFINITY;

	static constexpr double mantissa_max = 18'446'744'073'709'551'616.0;
	return ldexp(this->m_mantissa / mantissa_max + 1, (int)exponent);
}

#include <numeric>;
#include <fstream>;


template<class fp_t, class callable_t>
fp_t integrate_nc12_helper(callable_t&& f, fp_t data, size_t n, fp_t h, fp_t s = 0)
{
	fp_t vals[11];
	vals[0] = f(data);

	fp_t ds;
	while (n --> 0)
	{
		for (size_t i = 1; i < 11; ++i)
		{
			data += h;
			vals[i] = f(data);
		}

		ds = 16067 * (vals[0] + vals[10]);
		ds += 272400 * (vals[3] + vals[7]) - 260550 * (vals[4] + vals[6]);
		ds -= 48525 * (vals[2] + vals[8]);
		ds += 106300 * (vals[1] + vals[9]);
		ds += 427368 * vals[5];
		s += ds;

		vals[0] = std::move(vals[10]);
	}

	return s * h * 5. / 299376;
}

template<bool assume_monotonic_decreasing = false, class fp_t, class callable_t>
fp_t integrate_nc6_helper(callable_t&& f, fp_t(&vals10)[5], fp_t data, size_t n, fp_t h, fp_t s = 0)
{
	fp_t ds, new_s;

	{
		//fp_t new_h = (x + h) - x;
		//fp_t nf = (n * h) / new_h;
		//n = size_t(ceil(nf));
		//h = std::move(new_h);
	}

	for (size_t i = 0; i < n; ++i)
	{
		data += h;
		vals10[1] = f(data);
		data += h;
		vals10[2] = f(data);
		data += h;
		vals10[3] = f(data);
		data += h;
		vals10[4] = f(data);

		//std::cout << std::format("\n{}", i);

		ds = (fp_t)7 * (vals10[0] + vals10[4]) + (fp_t)32 * (vals10[1] + vals10[3]) + (fp_t)12 * vals10[2];
		//std::cout << std::format(", {}", ds);
		if constexpr (assume_monotonic_decreasing)
		{
			new_s = s + ds;
			if (new_s == s)
				break;
			s = new_s;
		}
		else
			s += ds;
		//std::cout << std::format(", {}", s);

		vals10[0] = std::move(vals10[4]);
	}
	return s * h / 22.5;
}

template<class fp_t, class callable_t>
fp_t integrate_nc6(callable_t&& f, fp_t a, fp_t b)
{
	using std::abs;
	using std::pow;

	const fp_t l = abs(b - a);
	const size_t n = (size_t)(150 * pow(l, fp_t(7) / fp_t(6) + 1));
	const fp_t dx = l / n;

	fp_t vals10[5];
	vals10[0] = f(a);

	return integrate_nc6_helper(std::forward<callable_t>(f), vals10, a, n, dx / 4);
}



size_t N;
size_t n12;
double NF;

template<class fp_t>
fp_t stdnorm_cdf_nc_transformed(fp_t a)
{
	static_assert(!std::is_integral_v<fp_t>);

	using std::exp;
	using std::log;

	if (a > 0)
		return 1 - stdnorm_cdf_nc_transformed(-a);

	auto f = []
	(const fp_t& data)
	{
		auto a = 0.5 / data;
		auto b = 1.5 * log(data);
		auto c = a + b;
		auto d = exp(-c);
		return d;
	};


	/*
	Note: 
		for IEEE754 binary64 format, 
		for all x <= 6.62e-4 (a < -38.8), f(x)=0 due to underflow
	*/

	//2 * sqrt(2pi)
	const static fp_t c = 5.01325654926200100483153056962L;
	//const static fp_t c = 0.199471140200716338969973029967L;

	const fp_t x1 = 1 / (a * a);
	fp_t h;
	size_t n;
	if (x1 > 0.2)
	{
		h = fp_t(1) / 2192;
		n = size_t(x1 * 548);
	}
	else
	{
		n = 1175;
		//n = N;
		h = x1 / (4 * n);
	}

	fp_t arr[5];
	arr[0] = 0;

	return integrate_nc6_helper(f, arr, (fp_t)0, n, h) / c;
}


template<class fp_t>
fp_t stdnorm_cdf_nc12_basic_inf(fp_t data)
{
	using std::abs;
	using std::pow;

	const fp_t low = -40;

	const fp_t c11 = 0.004118304;
	const fp_t eps = std::numeric_limits<double>::epsilon();
	const fp_t x2 = data * data;
	const fp_t xp11 = 10395 * x2 - 17325 * pow(x2, 2) + 6930 * pow(x2, 3) - 990 * pow(x2, 4) + 55 * pow(x2, 5) - pow(x2, 6);
	const fp_t fpn = (data - low) / 10 * pow(c11 / eps * abs(xp11), 1. / 12);
	const size_t n = (size_t)(fpn / 2.25 + 1) ;

	//const size_t n = n12;

	static const fp_t c = 1 / sqrt(2 * 3.14159265358979323);
	auto f = []
	(fp_t data)
	{
		return exp(data * data * -0.5);
	};

	return c * integrate_nc12_helper(f, low, n, (data - low) / (10 * n));
}

template<class fp_t>
fp_t stdnorm_cdf_nc6_basic_inf(fp_t data)
{
	auto f = []
	(fp_t data)
	{
		static const fp_t c = 1 / sqrt(2 * 3.14159265358979323);
		return c * exp(data * data * -0.5);
	};


	fp_t vals10[5];

	//const fp_t low = -40;
	//vals10[0] = f(low);
	//const fp_t max_h = -1 / (NF * x);
	//const fp_t l = (x - low);
	//size_t n = (size_t)ceil(l / max_h);
	//n = ((n - 1) | 3) + 1;

	//return integrate_nc6_helper<false, fp_t>(f, vals10, low, n / 4, l / n);


	
	vals10[0] = f(data);
	//const fp_t h = 0.00469484 / x;
	const fp_t h = -0.001;
	//return -integrate_nc6_helper<true, fp_t>(f, vals10, x, -1, h);

	fp_t nf = (40 + data) / (-4 * h);
	nf = std::ceil(nf);
	const fp_t h1 = (40 + data) / (-4 * nf);
	return -integrate_nc6_helper<false, fp_t>(f, vals10, data, (size_t)nf, h1);
}



std::pair<double, double> vals10[] = {
{-10., 7.6198530241605260780e-24},
{-9.99,8.4290872004430722893e-24},
{-9.98,9.3233391039085107398e-24},
{-9.97,1.0311441838944250956e-23},
{-9.96,1.1403135781327957142e-23},
{-9.95,1.2609160670206906700e-23},
{-9.94,1.3941356934207175602e-23},
{-9.93,1.5412777165948030633e-23},
{-9.92,1.7037808748572419697e-23},
{-9.91,1.8832308735867553874e-23},
{-9.9,2.0813752194932061281e-23},
{-9.89,2.3001395338060980433e-23},
{-9.88,2.5416454899538441246e-23},
{-9.87,2.8082305354423033302e-23},
{-9.86,3.1024695731348239223e-23},
{-9.85,3.4271987941136723243e-23},
{-9.84,3.7855418729000683505e-23},
{-9.83,4.1809387561859052906e-23},
{-9.82,4.6171772985456924537e-23},
{-9.81,5.0984280230387102938e-23},
{-9.8,5.6292823113765326341e-23},
{-9.79,6.2147943576382681177e-23},
{-9.78,6.8605272516019938865e-23},
{-9.77,7.5726035928895777064e-23},
{-9.76,8.3577610755683026859e-23},
{-9.75,9.2234135249394181633e-23},
{-9.74,1.0177717914296224204e-22},
{-9.73,1.1229647939830446896e-22},
{-9.72,1.2389074787004966140e-22},
{-9.71,1.3666855782034308342e-22},
{-9.7,1.5074931688102048754e-22},
{-9.69,1.6626433478118009410e-22},
{-9.68,1.8335799494758808970e-22},
{-9.67,2.0218903994845282218e-22},
{-9.66,2.2293198169501494532e-22},
{-9.65,2.4577864834723277843e-22},
{-9.64,2.7093988099789301221e-22},
{-9.63,2.9864739444248366018e-22},
{-9.62,3.2915581768977792688e-22},
{-9.61,3.6274493134073124708e-22},
{-9.6,3.9972212057262404936e-22},
{-9.59,4.4042506422339155679e-22},
{-9.58,4.8522468239203775479e-22},
{-9.57,5.3452836706905758191e-22},
{-9.56,5.8878352260246494314e-22},
{-9.55,6.4848144530772592932e-22},
{-9.54,7.1416157426282714630e-22},
{-9.53,7.8641614831360352850e-22},
{-9.52,8.6589530757244613742e-22},
{-9.51,9.5331268124934157941e-22},
{-9.5,1.0494515075362607506e-21},
{-9.49,1.1551713355020697013e-21},
{-9.48,1.2714153635782538054e-21},
{-9.47,1.3992184742601546180e-21},
{-9.46,1.5397160301520221526e-21},
{-9.45,1.6941535024881414944e-21},
{-9.44,1.8638970098111109244e-21},
{-9.43,2.0504448516317456657e-21},
{-9.42,2.2554401296837033632e-21},
{-9.41,2.4806845578808758933e-21},
{-9.4,2.7281535713461168966e-21},
{-9.39,3.0000128549764072816e-21},
{-9.38,3.2986364230152639553e-21},
{-9.37,3.6266263930989590237e-21},
{-9.36,3.9868346113159795922e-21},
{-9.35,4.3823862990665057368e-21},
{-9.34,4.8167059080290603108e-21},
{-9.33,5.2935453864547427946e-21},
{-9.32,5.8170150784305413891e-21},
{-9.31,6.3916174978197390164e-21},
{-9.3,7.0222842404416260350e-21},
{-9.29,7.7144163218519612764e-21},
{-9.28,8.4739282539989026607e-21},
{-9.27,9.3072962022458565907e-21},
{-9.26,1.0221610594963137329e-20},
{-9.25,1.1224633591327982665e-20},
{-9.24,1.2324861849358572729e-20},
{-9.23,1.3531595075809250095e-20},
{-9.22,1.4855010882645617241e-20},
{-9.21,1.6306246521703212213e-20},
{-9.2,1.7897488120140526251e-20},
{-9.19,1.9642068094779817999e-20},
{-9.18,2.1554571483784387577e-20},
{-9.17,2.3650951999743849047e-20},
{-9.16,2.5948658679619926534e-20},
{-9.15,2.8466774084602157541e-20},
{-9.14,3.1226165087293716282e-20},
{-9.13,3.4249647375362277779e-20},
{-9.12,3.7562164900481099213e-20},
{-9.11,4.1190985609726961239e-20},
{-9.1,4.5165914914354568607e-20},
{-9.09,4.9519528478781797058e-20},
{-9.08,5.4287426051638591431e-20},
{-9.07,5.9508508211720566434e-20},
{-9.06,6.5225278065713269452e-20},
{-9.05,7.1484170112697015129e-20},
{-9.04,7.8335908683906291007e-20},
{-9.03,8.5835898576283964550e-20},
{-9.02,9.4044650726484926463e-20},
{-9.01,1.0302824601955987409e-19},
{-9.,1.1285884059538406469e-19},
{-8.99,1.2361521630761374940e-19},
{-8.98,1.3538338030657974178e-19},
{-8.97,1.4825721806110337231e-19},
{-8.96,1.6233920450700946402e-19},
{-8.95,1.7774117841455445817e-19},
{-8.94,1.9458518550569849547e-19},
{-8.93,2.1300439632808326255e-19},
{-8.92,2.3314410540858712572e-19},
{-8.91,2.5516281876910038663e-19},
{-8.9,2.7923343749396466253e-19},
{-8.89,3.0554454569648167746e-19},
{-8.88,3.3430181194514847640e-19},
{-8.87,3.6572951398335734815e-19},
{-8.86,4.0007219741432720264e-19},
{-8.85,4.3759647993090420814e-19},
{-8.84,4.7859301365398910665e-19},
{-8.83,5.2337861920930114219e-19},
{-8.82,5.7229860632712031800e-19},
{-8.81,6.2572929700064536167e-19},
{-8.8,6.8408076859355459664e-19},
{-8.79,7.4779983575474145079e-19},
{-8.78,8.1737329158706074647e-19},
{-8.77,8.9333143023756356357e-19},
{-8.76,9.7625187493882091358e-19},
{-8.75,1.0667637375474857979e-18},
{-8.74,1.1655521378082314544e-18},
{-8.73,1.2733631129329804995e-18},
{-8.72,1.3910089506409835315e-18},
{-8.71,1.5193739815705339431e-18},
{-8.7,1.6594208699647842199e-18},
{-8.69,1.8121974447702042373e-18},
{-8.68,1.9788441167872173539e-18},
{-8.67,2.1606019312974939267e-18},
{-8.66,2.3588213096872222880e-18},
{-8.65,2.5749715380118863312e-18},
{-8.64,2.8106510652342209841e-18},
{-8.63,3.0675986790408411077e-18},
{-8.62,3.3477056327351369387e-18},
{-8.61,3.6530288027492509412e-18},
{-8.6,3.9858049628481818872e-18},
{-8.59,4.3484662681586132246e-18},
{-8.58,4.7436570497797408726e-18},
{-8.57,5.1742520289716830873e-18},
{-8.56,5.6433760688155661564e-18},
{-8.55,6.1544255908503761003e-18},
{-8.54,6.7110917945710794041e-18},
{-8.53,7.3173858288795835759e-18},
{-8.52,7.9776660766832374531e-18},
{-8.51,8.6966677268960643852e-18},
{-8.5,9.4795348222033183188e-18},
{-8.49,1.0331854986168627444e-17},
{-8.48,1.1259697049690021433e-17},
{-8.47,1.2269651814536554584e-17},
{-8.46,1.3368876210822488887e-17},
{-8.45,1.4565141125909419314e-17},
{-8.44,1.5866883204482714602e-17},
{-8.43,1.7283260943560194327e-17},
{-8.42,1.8824215432074573728e-17},
{-8.41,2.0500536112598450512e-17},
{-8.4,2.2323931972880435777e-17},
{-8.39,2.4307108607318244520e-17},
{-8.38,2.6463851623481824667e-17},
{-8.37,2.8809116906508357551e-17},
{-8.36,3.1359128294842654392e-17},
{-8.35,3.4131483264581502514e-17},
{-8.34,3.7145267266886872026e-17},
{-8.33,4.0421177413769918710e-17},
{-8.32,4.3981656262323480620e-17},
{-8.31,4.7851036506478600405e-17},
{-8.3,5.2055697448902540006e-17},
{-8.29,5.6624234194084429270e-17},
{-8.28,6.1587640577329882968e-17},
{-8.27,6.6979506923731768469e-17},
{-8.26,7.2836233816554931012e-17},
{-8.25,7.9197263146424773033e-17},
{-8.24,8.6105327811628737498e-17},
{-8.23,9.3606721546315867868e-17},
{-8.22,1.0175159046794496719e-16},
{-8.21,1.1059424805859502132e-16},
{-8.2,1.2019351542735858094e-16},
{-8.19,1.3061308884366565201e-16},
{-8.18,1.4192193668483679666e-16},
{-8.17,1.5419472810608977417e-16},
{-8.16,1.6751229591869214202e-16},
{-8.15,1.8196213635266286456e-16},
{-8.14,1.9763894858549944855e-16},
{-8.13,2.1464521713883591559e-16},
{-8.12,2.3309184048183208280e-16},
{-8.11,2.5309880943477006245e-16},
{-8.1,2.7479593923982284801e-16},
{-8.09,2.9832365946002602771e-16},
{-8.08,3.2383386618322845379e-16},
{-8.07,3.5149084134705575080e-16},
{-8.06,3.8147224436528222619e-16},
{-8.05,4.1397018162731462849e-16},
{-8.04,4.4919235986269301671e-16},
{-8.03,4.8736332981363244663e-16},
{-8.02,5.2872582714312105340e-16},
{-8.01,5.7354221802580597524e-16},
{-8.,6.2209605742717840934e-16},
{-7.99,6.7469376867535597222e-16},
{-7.98,7.3166645357248918645e-16},
{-7.97,7.9337184298239442624e-16},
{-7.96,8.6019639857077753292e-16},
{-7.95,9.3255757716812281896e-16},
{-7.94,1.0109062700763357584e-15},
{-7.93,1.0957294305532487006e-15},
{-7.92,1.1875529036880534070e-15},
{-7.91,1.2869444739301303082e-15},
{-7.9,1.3945171466592642718e-15},
{-7.89,1.5109326813913621459e-15},
{-7.88,1.6369053955067799647e-15},
{-7.87,1.7732062587739450516e-15},
{-7.86,1.9206673004260849062e-15},
{-7.85,2.0801863521393902977e-15},
{-7.84,2.2527321519661280599e-15},
{-7.83,2.4393498361014519438e-15},
{-7.82,2.6411668473189401335e-15},
{-7.81,2.8593992910041678324e-15},
{-7.8,3.0953587719586998057e-15},
{-7.79,3.3504597475483298718e-15},
{-7.78,3.6262274353410343154e-15},
{-7.77,3.9243063161315743082e-15},
{-7.76,4.2464692761969570846e-15},
{-7.75,4.5946274357785954569e-15},
{-7.74,4.9708407141619597225e-15},
{-7.73,5.3773291853340636947e-15},
{-7.72,5.8164852820615928609e-15},
{-7.71,6.2908869103637587669e-15},
{-7.7,6.8033115407740086009e-15},
{-7.69,7.3567513475092381649e-15},
{-7.68,7.9544294717214967326e-15},
{-7.67,8.5998174904086809214e-15},
{-7.66,9.2966541783399241473e-15},
{-7.65,1.0048965656526307256e-14},
{-7.64,1.0861087027368974393e-14},
{-7.63,1.1737685603671632571e-14},
{-7.62,1.2683785846242720483e-14},
{-7.61,1.3704796132869424676e-14},
{-7.6,1.4806537490048087721e-14},
{-7.59,1.5995274428053124747e-14},
{-7.58,1.7277748029740787700e-14},
{-7.57,1.8661211453974311035e-14},
{-7.56,2.0153468025753090967e-14},
{-7.55,2.1762912097085810175e-14},
{-7.54,2.3498572875411093498e-14},
{-7.53,2.5370161429998621207e-14},
{-7.52,2.7388121101301267309e-14},
{-7.51,2.9563681553758925031e-14},
{-7.5,3.1908916729108962242e-14},
{-7.49,3.4436806974937369553e-14},
{-7.48,3.7161305642054819784e-14},
{-7.47,4.0097410464394938629e-14},
{-7.46,4.3261240056581080816e-14},
{-7.45,4.6670115887190645089e-14},
{-7.44,5.0342650110129210023e-14},
{-7.43,5.4298839662552218068e-14},
{-7.42,5.8560167065484840824e-14},
{-7.41,6.3149708392861007559e-14},
{-7.4,6.8092248906200149586e-14},
{-7.39,7.3414406885716512251e-14},
{-7.38,7.9144766224432303993e-14},
{-7.37,8.5314018389980302928e-14},
{-7.36,9.1955114399401291169e-14},
{-7.35,9.9103427495475678355e-14},
{-7.34,1.0679692725923004910e-13},
{-7.33,1.1507636594229155633e-13},
{-7.32,1.2398547785503093985e-13},
{-7.31,1.3357119270204612741e-13},
{-7.3,1.4388386381575876462e-13},
{-7.29,1.5497751230192023644e-13},
{-7.28,1.6691008817792954450e-13},
{-7.27,1.7974374965621678175e-13},
{-7.26,1.9354516180096485241e-13},
{-7.25,2.0838581586720694279e-13},
{-7.24,2.2434237071735811536e-13},
{-7.23,2.4149701780166917038e-13},
{-7.22,2.5993787128636410497e-13},
{-7.21,2.7975938501664260041e-13},
{-7.2,3.0106279811174531710e-13},
{-7.19,3.2395661110613501230e-13},
{-7.18,3.4855709467524088375e-13},
{-7.17,3.7498883311622973786e-13},
{-7.16,4.0338530489475549733e-13},
{-7.15,4.3388950271780595068e-13},
{-7.14,4.6665459575131574276e-13},
{-7.13,5.0184463676964528897e-13},
{-7.12,5.3963531720291979202e-13},
{-7.11,5.8021477323832747282e-13},
{-7.1,6.2378444633315911296e-13},
{-7.09,6.7056000171186402240e-13},
{-7.08,7.2077230864674784964e-13},
{-7.07,7.7466848656364783144e-13},
{-7.06,8.3251302127026192995e-13},
{-7.05,8.9458895587699219378e-13},
{-7.04,9.6119916126893894522e-13},
{-7.03,1.0326676912942746261e-12},
{-7.02,1.1093412281591428103e-12},
{-7.01,1.1915906238644960758e-12},
{-7.,1.2798125438858350021e-12},
{-6.99,1.3744312196851233173e-12},
{-6.98,1.4759003170555335878e-12},
{-6.97,1.5847049277360736786e-12},
{-6.96,1.7013636921956790578e-12},
{-6.95,1.8264310619769725586e-12},
{-6.94,1.9604997105092676217e-12},
{-6.93,2.1042031018518461810e-12},
{-6.92,2.2582182274117109267e-12},
{-6.91,2.4232685212989850629e-12},
{-6.9,2.6001269656381663309e-12},
{-6.89,2.7896193978476403438e-12},
{-6.88,2.9926280326350511877e-12},
{-6.87,3.2100952122345784896e-12},
{-6.86,3.4430273992370112228e-12},
{-6.85,3.6924994272356102310e-12},
{-6.84,3.9596590254358835728e-12},
{-6.83,4.2457316343544235439e-12},
{-6.82,4.5520255307680163345e-12},
{-6.81,4.8799372811693006000e-12},
{-6.8,5.2309575441445939506e-12},
{-6.79,5.6066772433156375154e-12},
{-6.78,6.0087941337850243867e-12},
{-6.77,6.4391197863959141123e-12},
{-6.76,6.8995870155696817103e-12},
{-6.75,7.3922577780178224094e-12},
{-6.74,7.9193315712484197762e-12},
{-6.73,8.4831543625020323096e-12},
{-6.72,9.0862280805653334461e-12},
{-6.71,9.7312207048268099766e-12},
{-6.7,1.0420976987965244367e-11},
{-6.69,1.1158529850799342369e-11},
{-6.68,1.1947112490090948945e-11},
{-6.67,1.2790171242479441501e-11},
{-6.66,1.3691379250250158252e-11},
{-6.65,1.4654650977302759189e-11},
{-6.64,1.5684157626499373208e-11},
{-6.63,1.6784343512543120891e-11},
{-6.62,1.7959943447673134635e-11},
{-6.61,1.9216001200774968858e-11},
{-6.6,2.0557889093995228931e-11},
{-6.59,2.1991328804642497452e-11},
{-6.58,2.3522413444041676077e-11},
{-6.57,2.5157630989118608057e-11},
{-6.56,2.6903889146820098429e-11},
{-6.55,2.8768541736043294724e-11},
{-6.54,3.0759416676564651573e-11},
{-6.53,3.2884845679542613174e-11},
{-6.52,3.5153695739517438027e-11},
{-6.51,3.7575402533488404269e-11},
{-6.5,4.0160005838591178103e-11},
{-6.49,4.2918187086179735209e-11},
{-6.48,4.5861309176724858235e-11},
{-6.47,4.9001458686909597991e-11},
{-6.46,5.2351490607639904525e-11},
{-6.45,5.5925075759427102893e-11},
{-6.44,5.9736751039731138860e-11},
{-6.43,6.3801972665447274660e-11},
{-6.42,6.8137172582734106602e-11},
{-6.41,7.2759818225903553602e-11},
{-6.4,7.7688475817098123461e-11},
{-6.39,8.2942877409021202412e-11},
{-6.38,8.8543991884077635198e-11},
{-6.37,9.4514100134950169166e-11},
{-6.36,1.0087687466392970828e-10},
{-6.35,1.0765746385121647053e-10},
{-6.34,1.1488258115603013567e-10},
{-6.33,1.2258059952863253003e-10},
{-6.32,1.3078165132642353078e-10},
{-6.31,1.3951773404306727158e-10},
{-6.3,1.4882282217623126723e-10},
{-6.29,1.5873298557698710409e-10},
{-6.28,1.6928651464230527357e-10},
{-6.27,1.8052405273134234792e-10},
{-6.26,1.9248873620654977134e-10},
{-6.25,2.0522634252189389094e-10},
{-6.24,2.1878544680290276315e-10},
{-6.23,2.3321758738675110134e-10},
{-6.22,2.4857744081530082797e-10},
{-6.21,2.6492300679994029937e-10},
{-6.2,2.8231580370432872519e-10},
{-6.19,3.0082107511968368881e-10},
{-6.18,3.2050800813734157193e-10},
{-6.17,3.4144996395473733060e-10},
{-6.16,3.6372472148406927543e-10},
{-6.15,3.8741473466756650139e-10},
{-6.14,4.1260740423967711834e-10},
{-6.13,4.3939536471466958748e-10},
{-6.12,4.6787678741816090431e-10},
{-6.11,4.9815570042312790653e-10},
{-6.1,5.3034232629488415862e-10},
{-6.09,5.6455343859580652279e-10},
{-6.08,6.0091273814884278350e-10},
{-6.07,6.3955125010966278056e-10},
{-6.06,6.8060774295041376373e-10},
{-6.05,7.2422917051376378122e-10},
{-6.04,7.7057113835424554938e-10},
{-6.03,8.1979839564513581297e-10},
{-6.02,8.7208535399297362301e-10},
{-6.01,9.2761663456911304089e-10},
{-6.,9.8658764503769815308e-10},
{-5.99,1.0492051878331542231e-9},
{-5.98,1.1156881014171732653e-9},
{-5.97,1.1862679362257284368e-9},
{-5.96,1.2611896671010935707e-9},
{-5.95,1.3407124440918718713e-9},
{-5.94,1.4251103835965698021e-9},
{-5.93,1.5146734019226539216e-9},
{-5.92,1.6097080934342472294e-9},
{-5.91,1.7105386555670024719e-9},
{-5.9,1.8175078630994284881e-9},
{-5.89,1.9309780941853103557e-9},
{-5.88,2.0513324107725973170e-9},
{-5.87,2.1789756961605578622e-9},
{-5.86,2.3143358525785590646e-9},
{-5.85,2.4578650618080336342e-9},
{-5.84,2.6100411120129171704e-9},
{-5.83,2.7713687940946291648e-9},
{-5.82,2.9423813710443618984e-9},
{-5.81,3.1236421239300217978e-9},
{-5.8,3.3157459783261649214e-9},
{-5.79,3.5193212151746257502e-9},
{-5.78,3.7350312702497463219e-9},
{-5.77,3.9635766265976547212e-9},
{-5.76,4.2056968045220266367e-9},
{-5.75,4.4621724539016119798e-9},
{-5.74,4.7338275538455821161e-9},
{-5.73,5.0215317249245489495e-9},
{-5.72,5.3262026594555038942e-9},
{-5.71,5.6488086755709354483e-9},
{-5.7,5.9903714010635283466e-9},
{-5.69,6.3519685932719829909e-9},
{-5.68,6.7347371015575310743e-9},
{-5.67,7.1398759792184083384e-9},
{-5.66,7.5686497519977139309e-9},
{-5.65,8.0223918506635392833e-9},
{-5.64,8.5025082154750551151e-9},
{-5.63,9.0104810806990575814e-9},
{-5.62,9.5478729477042683072e-9},
{-5.61,1.0116330755541376279e-8},
{-5.6,1.0717590258310929661e-8},
{-5.59,1.1353480619032171146e-8},
{-5.58,1.2025929230154913064e-8},
{-5.57,1.2736966771299889996e-8},
{-5.56,1.3488732515278456670e-8},
{-5.55,1.4283479893922769532e-8},
{-5.54,1.5123582335760968402e-8},
{-5.53,1.6011539388090921624e-8},
{-5.52,1.6949983136550861725e-8},
{-5.51,1.7941684935847135888e-8},
{-5.5,1.8989562465887720088e-8},
{-5.49,2.0096687128176455603e-8},
{-5.48,2.1266291797959197175e-8},
{-5.47,2.2501778948268566369e-8},
{-5.46,2.3806729162700371766e-8},
{-5.45,2.5184910054461120428e-8},
{-5.44,2.6640285609967302664e-8},
{-5.43,2.8177025976039911291e-8},
{-5.42,2.9799517710536286070e-8},
{-5.41,3.1512374517082212048e-8},
{-5.4,3.3320448485428673225e-8},
{-5.39,3.5228841859843011617e-8},
{-5.38,3.7242919358871162382e-8},
{-5.37,3.9368321070759046427e-8},
{-5.36,4.1610975949819659182e-8},
{-5.35,4.3977115940058989486e-8},
{-5.34,4.6473290753441261184e-8},
{-5.33,4.9106383331285320449e-8},
{-5.32,5.1883626018424162874e-8},
{-5.31,5.4812617480956549442e-8},
{-5.3,5.7901340399645943828e-8},
{-5.29,6.1158179972305956459e-8},
{-5.28,6.4591943259825002939e-8},
{-5.27,6.8211879411862435221e-8},
{-5.26,7.2027700809659614880e-8},
{-5.25,7.6049605164887146144e-8},
{-5.24,8.0288298614958837205e-8},
{-5.23,8.4755019856828776853e-8},
{-5.22,8.9461565362907524161e-8},
{-5.21,9.4420315724429682119e-8},
{-5.2,9.9644263169334722372e-8},
{-5.19,1.0514704030354098824e-7},
{-5.18,1.1094295012634644484e-7},
{-5.17,1.1704699737263160195e-7},
{-5.16,1.2347492123651645158e-7},
{-5.15,1.3024322953320192360e-7},
{-5.14,1.3736923435784187116e-7},
{-5.13,1.4487108930250849375e-7},
{-5.12,1.5276782829456609937e-7},
{-5.11,1.6107940612213741708e-7},
{-5.1,1.6982674071476015489e-7},
{-5.09,1.7903175724983412401e-7},
{-5.08,1.8871743415806014928e-7},
{-5.07,1.9890785110371279948e-7},
{-5.06,2.0962823901837038032e-7},
{-5.05,2.2090503226954353329e-7},
{-5.04,2.3276592304859984110e-7},
{-5.03,2.4523991806537013532e-7},
{-5.02,2.5835739763997333770e-7},
{-5.01,2.7215017728558195307e-7},
{-5.,2.8665157187919392690e-7},
{-4.99,3.0189646252084845103e-7},
{-4.98,3.1792136618528287353e-7},
{-4.97,3.3476450827361729502e-7},
{-4.96,3.5246589817642414369e-7},
{-4.95,3.7106740796333267763e-7},
{-4.94,3.9061285431832731552e-7},
{-4.93,4.1114808384393069339e-7},
{-4.92,4.3272106186170182794e-7},
{-4.91,4.5538196484073186334e-7},
{-4.9,4.7918327659032117962e-7},
{-4.89,5.0417988835753598779e-7},
{-4.88,5.3042920297509427833e-7},
{-4.87,5.5799124320978223162e-7},
{-4.86,5.8692876446663792263e-7},
{-4.85,6.1730737200919761965e-7},
{-4.84,6.4919564286133521478e-7},
{-4.83,6.8266525256166342686e-7},
{-4.82,7.1779110694689937638e-7},
{-4.81,7.5465147914637170134e-7},
{-4.8,7.9332815197559536818e-7},
{-4.79,8.3390656592291058888e-7},
{-4.78,8.7647597292920358721e-7},
{-4.77,9.2112959616714338472e-7},
{-4.76,9.6796479603273277607e-7},
{-4.75,1.0170832425687032385e-6},
{-4.74,1.0685910945459333943e-6},
{-4.73,1.1225991854361760258e-6},
{-4.72,1.1792232165163974721e-6},
{-4.71,1.2385839573524706453e-6},
{-4.7,1.3008074539172809281e-6},
{-4.69,1.3660252446061426282e-6},
{-4.68,1.4343745844201347404e-6},
{-4.67,1.5059986775961555352e-6},
{-4.66,1.5810469189705103353e-6},
{-4.65,1.6596751443714683765e-6},
{-4.64,1.7420458903446588343e-6},
{-4.63,1.8283286635241622704e-6},
{-4.62,1.9187002199708972614e-6},
{-4.61,2.0133448548093378213e-6},
{-4.6,2.1124547025028533719e-6},
{-4.59,2.2162300481175424882e-6},
{-4.58,2.3248796499344089258e-6},
{-4.57,2.4386210737794219897e-6},
{-4.56,2.5576810394515301487e-6},
{-4.55,2.6822957796388555715e-6},
{-4.54,2.8127114117242081443e-6},
{-4.53,2.9491843228915141077e-6},
{-4.52,3.0919815689561837408e-6},
{-4.51,3.2413812873533920615e-6},
{-4.5,3.3976731247300604017e-6},
{-4.49,3.5611586795975566303e-6},
{-4.48,3.7321519605144884921e-6},
{-4.47,3.9109798602807053430e-6},
{-4.46,4.0979826466363588362e-6},
{-4.45,4.2935144699718670015e-6},
{-4.44,4.4979438885679265393e-6},
{-4.43,4.7116544118972375926e-6},
{-4.42,4.9350450625332702330e-6},
{-4.41,5.1685309572241354424e-6},
{-4.4,5.4125439077038731338e-6},
{-4.39,5.6675330418267395602e-6},
{-4.38,5.9339654456246674169e-6},
{-4.37,6.2123268269015036574e-6},
{-4.36,6.5031222009927922158e-6},
{-4.35,6.8068765993340647174e-6},
{-4.34,7.1241358014953438143e-6},
{-4.33,7.4554670913551262855e-6},
{-4.32,7.8014600381013366839e-6},
{-4.31,8.1627273027630844840e-6},
{-4.3,8.5399054709918110402e-6},
{-4.29,8.9336559128270031111e-6},
{-4.28,9.3446656701963657298e-6},
{-4.27,9.7736483729175877917e-6},
{-4.26,0.000010221345183984073557},
{-4.25,0.000010688525774934420469},
{-4.24,0.000011175989332120554226},
{-4.23,0.000011684565594707450819},
{-4.22,0.000012215115925253034388},
{-4.21,0.000012768534413734953990},
{-4.2,0.000013345749015906327882},
{-4.19,0.000013947722726881286676},
{-4.18,0.000014575454790867034573},
{-4.17,0.000015229981947977884299},
{-4.16,0.000015912379719082167797},
{-4.15,0.000016623763729652284774},
{-4.14,0.000017365291073604072487},
{-4.13,0.000018138161718130909514},
{-4.12,0.000018943619950553246403},
{-4.11,0.000019782955868224024170},
{-4.1,0.000020657506912546770505},
{-4.09,0.000021568659448180598016},
{-4.08,0.000022517850388525433704},
{-4.07,0.000023506568868595560369},
{-4.06,0.000024536357966409770547},
{-4.05,0.000025608816474041507249},
{-4.04,0.000026725600719492083343},
{-4.03,0.000027888426440563918196},
{-4.02,0.000029099070711931031759},
{-4.01,0.000030359373926618219754},
{-4.,0.000031671241833119921249},
{-3.99,0.000033036647629402415809},
{-3.98,0.000034457634115053143565},
{-3.97,0.000035936315902853848983},
{-3.96,0.000037474881691073447479},
{-3.95,0.000039075596597787483637},
{-3.94,0.000040740804558550802876},
{-3.93,0.000042472930788761250822},
{-3.92,0.000044274484312070731274},
{-3.91,0.000046148060556208773669},
{-3.9,0.000048096344017602823002},
{-3.89,0.000050122110996188447762},
{-3.88,0.000052228232401820171230},
{-3.87,0.000054417676633699747662},
{-3.86,0.000056693512534256758911},
{-3.85,0.000059058912418922627106},
{-3.84,0.000061517155183255285234},
{-3.83,0.000064071629488874542509},
{-3.82,0.000066725837029684642989},
{-3.81,0.000069483395879865283510},
{-3.8,0.000072348043925120025836},
{-3.79,0.000075323642378683284984},
{-3.78,0.000078414179383584958310},
{-3.77,0.000081623773702686251477},
{-3.76,0.000084956678497997932005},
{-3.75,0.000088417285200803867794},
{-3.74,0.000092010127474105435774},
{-3.73,0.000095739885268914669941},
{-3.72,0.000099611388975916720545},
{-3.71,0.00010362962367403111526},
{-3.7,0.00010779973347738826145},
{-3.69,0.00011212702598224730108},
{-3.68,0.00011661697681536835390},
{-3.67,0.00012127523428535806812},
{-3.66,0.00012610762413848666879},
{-3.65,0.00013112015442048485267},
{-3.64,0.00013631902044580214800},
{-3.63,0.00014171060987581926119},
{-3.62,0.00014730150790747255916},
{-3.61,0.00015309850257375556859},
{-3.6,0.00015910859015753409701},
{-3.59,0.00016533898072010976569},
{-3.58,0.00017179710374593073096},
{-3.57,0.00017849061390484717758},
{-3.56,0.00018542739693327821226},
{-3.55,0.00019261557563563337939},
{-3.54,0.00020006351600732017093},
{-3.53,0.00020777983348062107976},
{-3.52,0.00021577339929471788855},
{-3.51,0.00022405334699109301405},
{-3.5,0.00023262907903552503628},
{-3.49,0.00024151027356783605418},
{-3.48,0.00025070689128053809069},
{-3.47,0.00026022918242746705898},
{-3.46,0.00027008769396347471657},
{-3.45,0.00028029327681617722702},
{-3.44,0.00029085709329074373052},
{-3.43,0.00030179062460863769893},
{-3.42,0.00031310567858120007416},
{-3.41,0.00032481439741887785134},
{-3.4,0.00033692926567688159599},
{-3.39,0.00034946311833797175432},
{-3.38,0.00036242914903304430928},
{-3.37,0.00037584091840008352387},
{-3.36,0.00038971236258203268594},
{-3.35,0.00040405780186402177937},
{-3.34,0.00041889194945036990331},
{-3.33,0.00043422992038165519832},
{-3.32,0.00045008724059211655423},
{-3.31,0.00046647985610754948091},
{-3.3,0.00048342414238377750706},
{-3.29,0.00050093691378572211662},
{-3.28,0.00051903543320697234544},
{-3.27,0.00053773742182969583168},
{-3.26,0.00055706106902462208558},
{-3.25,0.00057702504239076704294},
{-3.24,0.00059764849793441531130},
{-3.23,0.00061895109038683595500},
{-3.22,0.00064095298366005678845},
{-3.21,0.00066367486143996785415},
{-3.2,0.00068713793791584803176},
{-3.19,0.00071136396864536527556},
{-3.18,0.00073637526155393163753},
{-3.17,0.00076219468806723519022},
{-3.16,0.00078884569437557304423},
{-3.15,0.00081635231282856370251},
{-3.14,0.00084473917345862831054},
{-3.13,0.00087403151563156741863},
{-3.12,0.00090425519982233964919},
{-3.11,0.00093543671951410142010},
{-3.1,0.00096760321321835805334},
{-3.09,0.0010007824766140108783},
{-3.08,0.0010350029748028413626},
{-3.07,0.0010702938546789231115},
{-3.06,0.0011066849574092483890},
{-3.05,0.0011442068310226996124},
{-3.04,0.0011828907431044066182},
{-3.03,0.0012227686935922591829},
{-3.02,0.0012638734276723002312},
{-3.01, 0.0013062384487694686722},
{-3.,0.0013498980316300945283},
{-2.99,0.0013948872354922494928},
{-2.98,0.0014412419173400169376},
{-2.97,0.0014889987452374669573},
{-2.96,0.0015381952117380588310},
{-2.95,0.0015888696473648675854},
{-2.94,0.0016410612341569999105},
{-2.93,0.0016948100192772640078},
{-2.92,0.0017501569286761004111},
{-2.91, 0.0018071437808064282845},
{-2.9,
   0.0018658133003840411263},
{-2.89,0.0019262091321878627632},
{-2.88,0.0019883758548943256258},
{-2.87,0.0020523589949397533869},
{-2.86,0.0021182050404046239298},
{-2.85,0.0021859614549132432181},
{-2.84,0.0022556766915423238049},
{-2.83,0.0023274002067315539884},
{-2.82,0.0024011824741892494182},
{-2.81, 0.0024770749987858645337},
{-2.8,
   0.0025551303304279323669},
{-2.79,0.0026354020779049523033},
{-2.78,0.0027179449227012565674},
{-2.77,0.0028028146327650318763},
{-2.76,0.0028900680762261483953},
{-2.75,0.0029797632350545567651},
{-2.74,0.0030719592186504907212},
{-2.73,0.0031667162773577993524},
{-2.72,0.0032640958158913149411},
{-2.71, 0.0033641604066691937113},
{-2.7,
   0.0034669738030406666594},
{-2.69,0.0035726009523997446753},
{-2.68,0.0036811080091749851238},
{-2.67,0.0037925623476854900523},
{-2.66,0.0039070325748527772435},
{-2.65,0.0040245885427583138758},
{-2.64,0.0041453013610360453880},
{-2.63,0.0042692434090893525385},
{-2.62,0.0043964883481213117893},
{-2.61, 0.0045271111329673309092},
{-2.6,
   0.0046611880237187551015},
{-2.59,0.0047987965971261829688},
{-2.58,0.0049400157577706447165},
{-2.57,0.0050849257489910341311},
{-2.56,0.0052336081635557948613},
{-2.55,0.0053861459540666907624},
{-2.54,0.0055426234430826039439},
{-2.53,0.0057031263329506923669},
{-2.52,0.0058677417153325710668},
{-2.51, 0.0060365580804126633393},
{-2.5,
   0.0062096653257761352054},
{-2.49,0.0063871547649431732232},
{-2.48,0.0065691191355467711201},
{-2.47,0.0067556526071406556982},
{-2.46,0.0069468507886243159355},
{-2.45,0.0071428107352714157018},
{-2.44,0.0073436309553483576155},
{-2.43,0.0075494114163092136851},
{-2.42,0.0077602535505536460423},
{-2.41, 0.0079762602607337265157},
{-2.4,
   0.0081975359245961414311},
{-2.39,0.0084241863993456994918},
{-2.38,0.0086563190255165503671},
{-2.37,0.0088940426303367748876},
{-2.36,0.0091374675305726849963},
{-2.35,0.0093867055348385863389},
{-2.34,0.0096418699453583363510},
{-2.33,0.0099030755591642502687},
{-2.32, 0.010170438668719669619},
{-2.31,
   0.010444077061951097479},
{-2.3, 0.010724110021675810483},
{-2.29,0.011010658324411386743},
{-2.28, 0.011303844238552785315},
{-2.27,0.011603791521903548347},
{-2.26, 0.011910625418547071770},
{-2.25,0.012224472655044703206},
{-2.24, 0.012545461435946561393},
{-2.23,0.012873721438602036961},
{-2.22, 0.013209383807256289257},
{-2.21,0.013552581146419983306},
{-2.2, 0.013903447513498604351},
{-2.19,0.014262118410668892385},
{-2.18, 0.014628730775989271792},
{-2.17,0.015003422973732205194},
{-2.16, 0.015386334783925447500},
{-2.15,0.015777607391090529837},
{-2.14, 0.016177383372166110633},
{-2.13,0.016585806683605017346},
{-2.12, 0.017003022647632797885},
{-2.11,0.017429177937657112073},
{-2.1, 0.017864420562816572362},
{-2.09,0.018308899851658968671},
{-2.08, 0.018762766434937750696},
{-2.07,0.019226172227517318527},
{-2.06, 0.019699270409376918042},
{-2.05,0.020182215405704409426},
{-2.04, 0.020675162866070051812},
{-2.03,0.021178269642672253829},
{-2.02, 0.021691693767646807792},
{-2.01,0.022215594429431485807},
{-2., 0.022750131948179206935},
{-1.99,0.023295467750211809873},
{-1.98, 0.023851764341508496489},
{-1.97,0.024419185280222508888},
{-1.96, 0.024997895148220487708},
{-1.95,0.025588059521638667241},
{-1.94, 0.026189844940452721687},
{-1.93,0.026803418877054978112},
{-1.92, 0.027428949703836821476},
{-1.91,0.028066606659772497393},
{-1.9, 0.028716559816001775373},
{-1.89,0.029378980040409388538},
{-1.88, 0.030054038961199854102},
{-1.87,0.030741908929466013231},
{-1.86, 0.031442762980752748261},
{-1.85,0.032156774795613735498},
{-1.84, 0.032884118659163896940},
{-1.83,0.033624969419628331283},
{-1.82, 0.034379502445889973973},
{-1.81,0.035147893584038763386},
{-1.8, 0.035930319112925746321},
{-1.79,0.036726955698726364658},
{-1.78, 0.037537980348516843350},
{-1.77,0.038363570362871267187},
{-1.76, 0.039203903287482667624},
{-1.75,0.040059156863817088272},
{-1.74, 0.040929508978807346310},
{-1.73,0.041815137613594909865},
{-1.72, 0.042716220791328877431},
{-1.71,0.043632936524031989229},
{-1.7, 0.044565462758543106310},
{-1.69,0.045513977321549848376},
{-1.68, 0.046478657863720072199},
{-1.67,0.047459681802947331386},
{-1.66, 0.048457226266722803260},
{-1.65,0.049471468033648059315},
{-1.64, 0.050502583474103654856},
{-1.63,0.051550748490089464006},
{-1.62, 0.052616138454252139940},
{-1.61,0.053698928148119769488},
{-1.6, 0.054799291699558033365},
{-1.59,0.055917402519469458272},
{-1.58, 0.057053433237754216281},
{-1.57,0.058207555638552986653},
{-1.56, 0.059379940594792972672},
{-1.55,0.060570758002058925461},
{-1.54, 0.061780176711811999432},
{-1.53,0.063008364463978504059},
{-1.52, 0.064255487818935890654},
{-1.51,0.065521712088916527779},
{-1.5, 0.066807201268858066003},
{-1.49,0.068112117966725425844},
{-1.48, 0.069436623333331660613},
{-1.47,0.070780876991685446979},
{-1.46, 0.072145036965893905685},
{-1.45,0.073529259609648445842},
{-1.44, 0.074933699534327116836},
{-1.43,0.076358509536739136994},
{-1.42, 0.077803840526546403956},
{-1.41,0.079269841453392581039},
{-1.4, 0.080756659233770993306},
{-1.39,0.082264438677668853203},
{-1.38, 0.083793322415014415309},
{-1.37,0.085343450821967099630},
{-1.36, 0.086914961947085118358},
{-1.35,0.088507991437402091455},
{-1.34, 0.090122672464452491908},
{-1.33,0.091759135650280814124},
{-1.32, 0.093417508993471760290},
{-1.31,0.095097917795238960275},
{-1.3, 0.096800484585610515815},
{-1.29,0.098525329049747983045},
{-1.28, 0.10027256795444220552},
{-1.27,0.10204231507481922238},
{-1.26, 0.10383468112130043663},
{-1.25,0.10564977366685525771},
{-1.24, 0.10748769707458687812},
{-1.23,0.10934855242569185824},
{-1.22, 0.11123243744783448371},
{-1.21,0.11313944644397746489},
{-1.2, 0.11506967022170840604},
{-1.19,0.11702319602310881657},
{-1.18, 0.11900010745520075673},
{-1.17,0.12100048442101821470},
{-1.16, 0.12302440305134334817},
{-1.15,0.12507193563715018793},
{-1.14, 0.12714315056279813837},
{-1.13,0.12923811224001803055},
{-1.12, 0.13135688104273088354},
{-1.11,0.13349951324274735123},
{-1.1, 0.13566606094638275265},
{-1.09,0.13785657203203552479},
{-1.08, 0.14007109008876903706},
{-1.07,0.14230965435593916579},
{-1.06, 0.14457229966390949122},
{-1.05,0.14685905637589619058},
{-1.04, 0.14916995033098161777},
{-1.03,0.15150500278834384950},
{-1.02, 0.15386423037273495749},
{-1.01,0.15624764502125464913},
{-1., 0.15865525393145705157},
{-0.99,0.16108705951083085927},
{-0.98, 0.16354305932769224099},
{-0.97,0.16602324606352945010},
{-0.96, 0.16852760746683804538},
{-0.95,0.17105612630848198861},
{-0.94, 0.17360878033862469949},
{-0.93,0.17618554224525798777},
{-0.92, 0.17878637961437173163},
{-0.91,0.18141125489179720588},
{-0.9, 0.18406012534675939430},
{-0.89,0.18673294303717247305},
{-0.88, 0.18942965477671239903},
{-0.87,0.19215020210369640800},
{-0.86, 0.19489452125180851142},
{-0.85,0.19766254312269247965},
{-0.84, 0.20045419326044970109},
{-0.83,0.20326939182806838402},
{-0.82, 0.20610805358581299978},
{-0.81,0.20897008787160145068},
{-0.8, 0.21185539858339699481},
{-0.79,0.21476388416363736971},
{-0.78, 0.21769543758573331962},
{-0.77,0.22064994634264973825},
{-0.76, 0.22362729243759949819},
{-0.75,0.22662735237686819995},
{-0.74, 0.22964999716479053431},
{-0.73,0.23269509230089730134},
{-0.72, 0.23576249777925096741},
{-0.71,0.23885206808998700908},
{-0.7, 0.24196365222307323741},
{-0.69,0.24509709367430961536},
{-0.68, 0.24825223045357061975},
{-0.67,0.25142889509531013786},
{-0.66, 0.25462691467133610298},
{-0.65,0.25784611080586461136},
{-0.64, 0.26108629969286140645},
{-0.63,0.26434729211567787382},
{-0.62, 0.26762889346898328841},
{-0.61,0.27093090378300588786},
{-0.6, 0.27425311775007369994},
{-0.59,0.27759532475346494650},
{-0.58, 0.28095730889856431676},
{-0.57,0.28433884904632405919},
{-0.56, 0.28773971884902686716},
{-0.55,0.29115968678834673967},
{-0.54, 0.29459851621569832964},
{-0.53,0.29805596539487727998},
{-0.52, 0.30153178754696634602},
{-0.51,0.30502573089751949390},
{-0.5, 0.30853753872598689827},
{-0.49,0.31206694941739047269},
{-0.48, 0.31561369651622243847},
{-0.47,0.31917750878255557855},
{-0.46, 0.32275811025034803653},
{-0.45,0.32635522028792028423},
{-0.44, 0.32996855366059385452},
{-0.43,0.33359782059545777647},
{-0.42, 0.33724272684824952276},
{-0.41,0.34090297377232256360},
{-0.4, 0.34457825838967570506},
{-0.39,0.34826827346401740627},
{-0.38, 0.35197270757583759184},
{-0.37,0.35569124519945354309},
{-0.36, 0.35942356678200897321},
{-0.35,0.36316934882438106515},
{-0.34, 0.36692826396397200145},
{-0.33,0.37069998105934645532},
{-0.32, 0.37448416527667987648},
{-0.31,0.37828047817798053510},
{-0.3, 0.38208857781104777254},
{-0.29,0.38590811880112299783},
{-0.28, 0.38973875244420303860},
{-0.27,0.39358012680196065281},
{-0.26, 0.39743188679823958416},
{-0.25,0.40129367431707627921},
{-0.24, 0.40516512830220407413},
{-0.23,0.40904588485799397145},
{-0.22, 0.41293557735178514488},
{-0.21,0.41683383651755805140},
{-0.2, 0.42074029056089725795},
{-0.19,0.42465456526520474964},
{-0.18, 0.42857628409909938996},
{-0.17,0.43250506832496161383},
{-0.16, 0.43644053710856711054},
{-0.15,0.44038230762975734405},
{-0.14, 0.44432999519409334820},
{-0.13,0.44828321334543925610},
{-0.12, 0.45224157397941645969},
{-0.11,0.45620468745768344023},
{-0.1, 0.46017216272297115965},
{-0.09,0.46414360741482794878},
{-0.08, 0.46811862798601259358},
{-0.07,0.47209682981947878138},
{-0.06, 0.47607781734589295521},
{-0.05,0.48006119416162795938},
{-0.04, 0.48404656314716957377},
{-0.03,0.48803352658588760451},
{-0.02, 0.49202168628309818190},
{-0.01,0.49601064368536847283},
{0., 0.49999999999999998997}
};
std::pair<double, double> vals38[] = { {-38.,2.88542836006878431e-316},
{-37.963,1.17748002981242840e-315},
{-37.926,4.79846869703247281e-315},
{-37.889,1.95279945108728318e-314},
{-37.852,7.93630748724760478e-314},
{-37.815,3.22095896269676246e-313},
{-37.778,1.30544254431071093e-312},
{-37.741,5.28367624468720874e-312},
{-37.704,2.13560289708214278e-311},
{-37.667,8.62006759653588922e-311},
{-37.63,3.47461515659222309e-310},
{-37.593,1.39864860656564762e-309},
{-37.556,5.62233079341726565e-309},
{-37.519,2.25699211398560135e-308},
{-37.482,9.04793684826510880e-308},
{-37.445,3.62222106595255571e-307},
{-37.408,1.44812555101526031e-306},
{-37.371,5.78153760378657523e-306},
{-37.334,2.30508193810849435e-305},
{-37.297,9.17772956402450095e-305},
{-37.26,3.64913576499782155e-304},
{-37.223,1.44894087381489525e-303},
{-37.186,5.74535917725243142e-303},
{-37.149,2.27504286438601076e-302},
{-37.112,8.99638148087362706e-302},
{-37.075,3.55264671982350123e-301},
{-37.038,1.40101267438965703e-300},
{-37.001,5.51744468652289210e-300},
{-36.964,2.16990037554304717e-299},
{-36.927,8.52211687758259012e-299},
{-36.89,3.34242031424460775e-298},
{-36.853,1.30912321402803306e-297},
{-36.816,5.12042338871917190e-297},
{-36.779,2.00003275755875180e-296},
{-36.742,7.80143031229355080e-296},
{-36.705,3.03890586536760037e-295},
{-36.668,1.18213248392037319e-294},
{-36.631,4.59220161252055344e-294},
{-36.594,1.78148280122797041e-293},
{-36.557,6.90157503418230325e-293},
{-36.52,2.67005795362404654e-292},
{-36.483,1.03157083788050381e-291},
{-36.446,3.98000227489281445e-291},
{-36.409,1.53346363254920384e-290},
{-36.372,5.90023811240538371e-290},
{-36.335,2.26710426840510339e-289},
{-36.298,8.69920068419535321e-289},
{-36.261,3.33344355075971539e-288},
{-36.224,1.27559486221939090e-287},
{-36.187,4.87459253975877523e-287},
{-36.15,1.86024343466413439e-286},
{-36.113,7.08936187134274685e-286},
{-36.076,2.69805261431702905e-285},
{-36.039,1.02541481907889628e-284},
{-36.002,3.89183725386584631e-284},
{-35.965,1.47508028952847841e-283},
{-35.928,5.58319192481022769e-283},
{-35.891,2.11035425244506665e-282},
{-35.854,7.96588588616810770e-282},
{-35.817,3.00274677236249976e-281},
{-35.78,1.13034039713092880e-280},
{-35.743,4.24918561398280573e-280},
{-35.706,1.59517402758540878e-279},
{-35.669,5.98020886380636115e-279},
{-35.632,2.23887862867502319e-278},
{-35.595,8.37048584170653835e-278},
{-35.558,3.12519196764014694e-277},
{-35.521,1.16522193511592060e-276},
{-35.484,4.33856914721145421e-276},
{-35.447,1.61320781167380123e-275},
{-35.41,5.99018218128894707e-275},
{-35.373,2.22124093422155393e-274},
{-35.336,8.22540383701238621e-274},
{-35.299,3.04175839443926182e-273},
{-35.262,1.12330612475489726e-272},
{-35.225,4.14264258405228454e-272},
{-35.188,1.52567746380870225e-271},
{-35.151,5.61117645170652830e-271},
{-35.114,2.06087215028030722e-270},
{-35.077,7.55882177706779187e-270},
{-35.04,2.76861834694174869e-269},
{-35.003,1.01269347607492501e-268},
{-34.966,3.69912379456536910e-268},
{-34.929,1.34935323261674871e-267},
{-34.892,4.91539448433896725e-267},
{-34.855,1.78812155578131964e-266},
{-34.818,6.49593450184049675e-266},
{-34.781,2.35663419378986415e-265},
{-34.744,8.53785259072928986e-265},
{-34.707,3.08895136646249573e-264},
{-34.67,1.11603915357261156e-263},
{-34.633,4.02674135038312994e-263},
{-34.596,1.45088831139738212e-262},
{-34.559,5.22059706155352529e-262},
{-34.522,1.87591136011811224e-261},
{-34.485,6.73147751476294527e-261},
{-34.448,2.41220622456608310e-260},
{-34.411,8.63225810929473369e-260},
{-34.374,3.08489475166707304e-259},
{-34.337,1.10093641614833173e-258},
{-34.3,3.92364833146272396e-258},
{-34.263,1.39644510301303287e-257},
{-34.226,4.96322100375664241e-257},
{-34.189,1.76160817261382488e-256},
{-34.152,6.24397241568551010e-256},
{-34.115,2.21013393614784780e-255},
{-34.078,7.81235859389273356e-255},
{-34.041,2.75772976227619020e-254},
{-34.004,9.72136398311397729e-254},
{-33.967,3.42222582619300893e-253},
{-33.93,1.20308437997639259e-252},
{-33.893,4.22366511549342186e-252},
{-33.856,1.48077417248261762e-251},
{-33.819,5.18434807194385695e-251},
{-33.782,1.81261446311946556e-250},
{-33.745,6.32881934674075987e-250},
{-33.708,2.20671337601468836e-249},
{-33.671,7.68378363580451582e-249},
{-33.634,2.67183909052137254e-248},
{-33.597,9.27793756117268698e-248},
{-33.56,3.21735191081882752e-247},
{-33.523,1.11417051918968957e-246},
{-33.486,3.85310404777962237e-246},
{-33.449,1.33068661592950354e-245},
{-33.412,4.58930393139952941e-245},
{-33.375,1.58060675022142281e-244},
{-33.338,5.43634269852517165e-244},
{-33.301,1.86722134329985533e-243},
{-33.264,6.40458160742870154e-243},
{-33.227,2.19377311576698404e-242},
{-33.19,7.50410051486578639e-242},
{-33.153,2.56337156786289730e-241},
{-33.116,8.74440919221784506e-241},
{-33.079,2.97889620608965546e-240},
{-33.042,1.01341251159496156e-239},
{-33.005,3.44288997980134366e-239},
{-32.968,1.16806233843298549e-238},
{-32.931,3.95744504510441631e-238},
{-32.894,1.33896665081368379e-237},
{-32.857,4.52408363740285758e-237},
{-32.82,1.52650239002518918e-236},
{-32.783,5.14363747480604854e-236},
{-32.746,1.73080928355212698e-235},
{-32.709,5.81612969501325030e-235},
{-32.672,1.95175343452509403e-234},
{-32.635,6.54066380867223046e-234},
{-32.598,2.18889388241969586e-233},
{-32.561,7.31532449277223358e-233},
{-32.524,2.44145369390290546e-232},
{-32.487,8.13709521125330460e-232},
{-32.45,2.70829716250850744e-231},
{-32.413,9.00179760443618632e-231},
{-32.376,2.98791464533645452e-230},
{-32.339,9.90405731014332941e-230},
{-32.302,3.27841643801220872e-229},
{-32.265,1.08373003533574242e-228},
{-32.228,3.57753688335949411e-228},
{-32.191,1.17937834670322793e-227},
{-32.154,3.88264962632135387e-227},
{-32.117,1.27646606967265845e-226},
{-32.08,4.19079457405817526e-226},
{-32.043,1.37400874239031019e-225},
{-32.006,4.49871670682322056e-225},
{-31.969,1.47093615588893994e-224},
{-31.932,4.80291642777939382e-224},
{-31.895,1.56611001604639672e-223},
{-31.858,5.09971065768867105e-223},
{-31.821,1.65834482011449141e-222},
{-31.784,5.38530339591850651e-222},
{-31.747,1.74643146901969702e-221},
{-31.71,5.65586400678004017e-221},
{-31.673,1.82916299685588643e-220},
{-31.636,5.90761107476753361e-220},
{-31.599,1.90536167792917663e-219},
{-31.562,6.13689932777832524e-219},
{-31.525,1.97390667658977696e-218},
{-31.488,6.34030687526523201e-218},
{-31.451,2.03376134215396685e-217},
{-31.414,6.51471986606765062e-217},
{-31.377,2.08399922518983440e-216},
{-31.34,6.65741165068430466e-216},
{-31.303,2.12382790529702531e-215},
{-31.266,6.76611364096148319e-215},
{-31.229,2.15260977506070626e-214},
{-31.192,6.83907529593740436e-214},
{-31.155,2.16987901876552102e-213},
{-31.118,6.87511101789940581e-213},
{-31.081,2.17535415414947730e-212},
{-31.044,6.87363220314331764e-212},
{-31.007,2.16894566531081665e-211},
{-30.97,6.83466323659689417e-211},
{-30.933,2.15075843752737430e-210},
{-30.896,6.75884082294175695e-210},
{-30.859,2.12108890143112668e-209},
{-30.822,6.64739667985266753e-209},
{-30.785,2.08041699521109780e-208},
{-30.748,6.50212425076555292e-208},
{-30.711,2.02939324940483027e-207},
{-30.674,6.32533069430260585e-207},
{-30.637,1.96882147995769685e-206},
{-30.6,6.11977594624565071e-206},
{-30.563,1.89963773286438810e-205},
{-30.526,5.88860110256965153e-205},
{-30.489,1.82288625070039398e-204},
{-30.452,5.63524871814598599e-204},
{-30.415,1.73969332216435727e-203},
{-30.378,5.36337784138780047e-203},
{-30.341,1.65123992705450018e-202},
{-30.304,5.07677670290013911e-202},
{-30.267,1.55873409966369152e-201},
{-30.23,4.77927594606924064e-201},
{-30.193,1.46338390445354530e-200},
{-30.156,4.47466513591186137e-200},
{-30.119,1.36637185214772750e-199},
{-30.082,4.16661502231220306e-199},
{-30.045,1.26883148693722620e-198},
{-30.008,3.85860768273497387e-198},
{-29.971,1.17182675266823769e-197},
{-29.934,3.55387624947447114e-197},
{-29.897,1.07633460494704752e-196},
{-29.86,3.25535546143073195e-196},
{-29.823,9.83231184892483919e-196},
{-29.786,2.96564379532465779e-195},
{-29.749,8.93281716587715711e-195},
{-29.712,2.68697745032838050e-194},
{-29.675,8.07134141565734603e-194},
{-29.638,2.42121600560452960e-193},
{-29.601,7.25316366455314644e-193},
{-29.564,2.16983916133018779e-192},
{-29.527,6.48236879692866156e-192},
{-29.49,1.93395362555333148e-191},
{-29.453,5.76188394046005602e-191},
{-29.416,1.71430893242767855e-190},
{-29.379,5.09354096248018855e-190},
{-29.342,1.51132077791834806e-189},
{-29.305,4.47816034467063251e-189},
{-29.268,1.32510033844948422e-188},
{-29.231,3.91565148388694276e-188},
{-29.194,1.15548799334399764e-187},
{-29.157,3.40512443916256047e-187},
{-29.12,1.00208989697245375e-186},
{-29.083,2.94500832382770188e-186},
{-29.046,8.64315932034805230e-186},
{-29.009,2.53317189474634262e-185},
{-28.972,7.41417710189950157e-185},
{-28.935,2.16704238027066918e-184},
{-28.898,6.32525457968834805e-184},
{-28.861,1.84371917498641256e-183},
{-28.824,5.36682821953419884e-183},
{-28.787,1.56007967308929616e-182},
{-28.75,4.52878835387973290e-182},
{-28.713,1.31287517630162161e-181},
{-28.676,3.80076497577282706e-181},
{-28.639,1.09881546361339591e-180},
{-28.602,3.17237618031701800e-180},
{-28.565,9.14641221320023286e-180},
{-28.528,2.63343761559261161e-179},
{-28.491,7.57184081338700026e-179},
{-28.454,2.17413292618050049e-178},
{-28.417,6.23414488564659662e-178},
{-28.38,1.78514653440525882e-177},
{-28.343,5.10478005186840225e-177},
{-28.306,1.45776118853157994e-176},
{-28.269,4.15720958224482367e-176},
{-28.232,1.18392351136898201e-175},
{-28.195,3.36706547831225766e-175},
{-28.158,9.56281319358950507e-175},
{-28.121,2.71222663866357473e-174},
{-28.084,7.68196774485246715e-174},
{-28.047,2.17282715609617866e-173},
{-28.01,6.13739510464509065e-173},
{-27.973,1.73120775010754129e-172},
{-27.936,4.87663776564149610e-172},
{-27.899,1.37182279304661692e-171},
{-27.862,3.85373404934042758e-171},
{-27.825,1.08111446172204481e-170},
{-27.788,3.02878067974463577e-170},
{-27.751,8.47364354198843475e-170},
{-27.714,2.36743886033994118e-169},
{-27.677,6.60531559172760301e-169},
{-27.64,1.84041003936722923e-168},
{-27.603,5.12084744531687789e-168},
{-27.566,1.42290304069165139e-167},
{-27.529,3.94834418582990521e-167},
{-27.492,1.09410985503325088e-166},
{-27.455,3.02770171648355565e-166},
{-27.418,8.36703291814023527e-166},
{-27.381,2.30906470885664168e-165},
{-27.344,6.36365999140092275e-165},
{-27.307,1.75139485979885195e-164},
{-27.27,4.81357137646659968e-164},
{-27.233,1.32116483348194576e-163},
{-27.196,3.62120274182994706e-163},
{-27.159,9.91185463418805053e-163},
{-27.122,2.70933843578023909e-162},
{-27.085,7.39567545467324936e-162},
{-27.048,2.01603787118529811e-161},
{-27.011,5.48814761806297296e-161},
{-26.974,1.49196674041694127e-160},
{-26.937,4.05040789138680587e-160},
{-26.9,1.09810695651102682e-159},
{-26.863,2.97301288112600874e-159},
{-26.826,8.03813335372186990e-159},
{-26.789,2.17030061360668195e-158},
{-26.752,5.85181855881833604e-158},
{-26.715,1.57568022803625946e-157},
{-26.678,4.23693299504028393e-157},
{-26.641,1.13773570002417245e-156},
{-26.604,3.05096662565706660e-156},
{-26.567,8.17033402646414483e-156},
{-26.53,2.18498496732635081e-155},
{-26.493,5.83530261402183729e-155},
{-26.456,1.55626877428717158e-154},
{-26.419,4.14488148547114748e-154},
{-26.382,1.10241706258931719e-153},
{-26.345,2.92810086759023078e-153},
{-26.308,7.76662685879002055e-153},
{-26.271,2.05724089992465591e-152},
{-26.234,5.44181989954606712e-152},
{-26.197,1.43750540479072028e-151},
{-26.16,3.79211166834752308e-151},
{-26.123,9.98985216561205772e-151},
{-26.086,2.62810867358425972e-150},
{-26.049,6.90452640263639375e-150},
{-26.012,1.81146851173152983e-149},
{-25.975,4.74606853831140319e-149},
{-25.938,1.24177681318552861e-148},
{-25.901,3.24458692558062090e-148},
{-25.864,8.46606523488054566e-148},
{-25.827,2.20602352341159280e-147},
{-25.79,5.74043762005576559e-147},
{-25.753,1.49171618400141611e-146},
{-25.716,3.87109420680061671e-146},
{-25.679,1.00320022562799396e-145},
{-25.642,2.59625799122764135e-145},
{-25.605,6.70987482561994161e-145},
{-25.568,1.73175854786313950e-144},
{-25.531,4.46340826880380016e-144},
{-25.494,1.14882067285049565e-143},
{-25.457,2.95286932079262810e-143},
{-25.42,7.57953518348044691e-143},
{-25.383,1.94288583213908475e-142},
{-25.346,4.97345685285884997e-142},
{-25.309,1.27138123052952312e-141},
{-25.272,3.24563447023414991e-141},
{-25.235,8.27427197027115827e-141},
{-25.198,2.10652371269006412e-140},
{-25.161,5.35561428427230025e-140},
{-25.124,1.35974857203785912e-139},
{-25.087,3.44757970540493763e-139},
{-25.05,8.72923944180720417e-139},
{-25.013,2.20721625819233498e-138},
{-24.976,5.57339416761761836e-138},
{-24.939,1.40540348466665932e-137},
{-24.902,3.53906623707185180e-137},
{-24.865,8.89985142133222818e-137},
{-24.828,2.23502932162456587e-136},
{-24.791,5.60518691966433797e-136},
{-24.754,1.40379400558920496e-135},
{-24.717,3.51093734332759939e-135},
{-24.68,8.76898221280444253e-135},
{-24.643,2.18716585215943858e-134},
{-24.606,5.44779384444039207e-134},
{-24.569,1.35508343326711692e-133},
{-24.532,3.36602884332549690e-133},
{-24.495,8.34979973803088989e-133},
{-24.458,2.06842947505439877e-132},
{-24.421,5.11695751476464982e-132},
{-24.384,1.26412302661391213e-131},
{-24.347,3.11869794645836289e-131},
{-24.31,7.68358199464054804e-131},
{-24.273,1.89042996595957152e-130},
{-24.236,4.64476670526805680e-130},
{-24.199,1.13965570994263392e-129},
{-24.162,2.79247884710318755e-129},
{-24.125,6.83301811783890250e-129},
{-24.088,1.66971256169013439e-128},
{-24.051,4.07452814260274645e-128},
{-24.014,9.92931748559786464e-128},
{-23.977,2.41639508706292599e-127},
{-23.94,5.87249918578586362e-127},
{-23.903,1.42522838736222049e-126},
{-23.866,3.45423947777230519e-126},
{-23.829,8.36039711196548041e-126},
{-23.792,2.02072798860781708e-125},
{-23.755,4.87747775410717997e-125},
{-23.718,1.17568027308353487e-124},
{-23.681,2.83002102282399976e-124},
{-23.644,6.80293923992415860e-124},
{-23.607,1.63308964713499547e-123},
{-23.57,3.91498376624116908e-123},
{-23.533,9.37252084890629129e-123},
{-23.496,2.24072922093381711e-122},
{-23.459,5.34969295693450271e-122},
{-23.422,1.27548353012622647e-121},
{-23.385,3.03687821742112251e-121},
{-23.348,7.22081842370090219e-121},
{-23.311,1.71455729216160340e-120},
{-23.274,4.06559498706725340e-120},
{-23.237,9.62726129468501234e-120},
{-23.2,2.27660636706434310e-119},
{-23.163,5.37625273351216443e-119},
{-23.126,1.26787942269831919e-118},
{-23.089,2.98595171614501055e-118},
{-23.052,7.02253903374664610e-118},
{-23.015,1.64934724810194259e-117},
{-22.978,3.86844653842577277e-117},
{-22.941,9.06082333556314422e-117},
{-22.904,2.11936273644829374e-116},
{-22.867,4.95050492486575277e-116},
{-22.83,1.15478271513662228e-115},
{-22.793,2.69003314507039540e-115},
{-22.756,6.25779842881163430e-115},
{-22.719,1.45375792254459866e-114},
{-22.682,3.37263395982049235e-114},
{-22.645,7.81363133092832772e-114},
{-22.608,1.80777018945681122e-113},
{-22.571,4.17676581307041547e-113},
{-22.534,9.63703940733355055e-113},
{-22.497,2.22051521024861778e-112},
{-22.46,5.10940680132165588e-112},
{-22.423,1.17406955604106021e-111},
{-22.386,2.69416252752592202e-111},
{-22.349,6.17391120667576015e-111},
{-22.312,1.41287452339003233e-110},
{-22.275,3.22889141317322311e-110},
{-22.238,7.36902314964049506e-110},
{-22.201,1.67947305457481091e-109},
{-22.164,3.82245870815833976e-109},
{-22.127,8.68798798298308815e-109},
{-22.09,1.97197893294902243e-108},
{-22.053,4.46984007527763947e-108},
{-22.016,1.01178528162675014e-107},
{-21.979,2.28713285440635178e-107},
{-21.942,5.16298774477931295e-107},
{-21.905,1.16390481934460532e-106},
{-21.868,2.62023662893578437e-106},
{-21.831,5.89074521647580892e-106},
{-21.794,1.32253339760972672e-105},
{-21.757,2.96517099844874762e-105},
{-21.72,6.63895203136165600e-105},
{-21.683,1.48441732036570337e-104},
{-21.646,3.31450894242518889e-104},
{-21.609,7.39075967932371909e-104},
{-21.572,1.64575686227289984e-103},
{-21.535,3.65972944934067369e-103},
{-21.498,8.12716362347398836e-103},
{-21.461,1.80233595697272331e-102},
{-21.424,3.99152832852921167e-102},
{-21.387,8.82773757505852722e-102},
{-21.35,1.94969351256177095e-101},
{-21.313,4.30021349027428222e-101},
{-21.276,9.47153635813979804e-101},
{-21.239,2.08332771463852677e-100},
{-21.202,4.57616319249143347e-100},
{-21.165,1.00381151211369272e-99},
{-21.128,2.19892086954642175e-99},
{-21.091,4.81031808562525903e-99},
{-21.054,1.05085975315568198e-98},
{-21.017,2.29256943291999242e-98},
{-20.98,4.99467247645478187e-98},
{-20.943,1.08667159643054471e-97},
{-20.906,2.36100226923860627e-97},
{-20.869,5.12272787509440563e-97},
{-20.832,1.10997440803013829e-96},
{-20.795,2.40177017396633023e-96},
{-20.758,5.18987306581772208e-96},
{-20.721,1.11992473437948260e-95},
{-20.684,2.41339135974331028e-95},
{-20.647,5.19365972151428015e-95},
{-20.61,1.11615897794390402e-94},
{-20.573,2.39544085802899947e-94},
{-20.536,5.13395059286956464e-94},
{-20.499,1.09881545162002152e-93},
{-20.462,2.34857631510919182e-93},
{-20.425,5.01292776565611092e-93},
{-20.388,1.06852594653312184e-92},
{-20.351,2.27449799912975853e-92},
{-20.314,4.83496029347573770e-92},
{-20.277,1.02637752999803255e-91},
{-20.24,2.17584640920290017e-91},
{-20.203,4.60634240163837967e-91},
{-20.166,9.73847794415127144e-91},
{-20.129,2.05604608384211527e-90},
{-20.092,4.33492413364551205e-90},
{-20.055,9.12718934184527593e-90},
{-20.018,1.91910848783311444e-89},
{-19.981,4.02966464788253077e-89},
{-19.944,8.44977612321170065e-89},
{-19.907,1.76940977898941986e-88},
{-19.87,3.70014354614652561e-88},
{-19.833,7.72708441332077666e-88},
{-19.796,1.61146055850499906e-87},
{-19.759,3.35606720783407858e-87},
{-19.722,6.97988985061240737e-87},
{-19.685,1.44968433221542924e-86},
{-19.648,3.00680513477611323e-86},
{-19.611,6.22793525140595417e-86},
{-19.574,1.28821949601909035e-85},
{-19.537,2.66098621721050401e-85},
{-19.5,5.48911547566002868e-85},
{-19.463,1.13075651750991238e-84},
{-19.426,2.32617737900686753e-84},
{-19.389,4.77885175458358772e-84},
{-19.352,9.80418045919480598e-84},
{-19.315,2.00865822757240485e-83},
{-19.278,4.10967822224751184e-83},
{-19.241,8.39685425990659991e-83},
{-19.204,1.71329616656657662e-82},
{-19.167,3.49104388518561416e-82},
{-19.13,7.10370988805899079e-82},
{-19.093,1.44351790363071363e-81},
{-19.056,2.92931576038689654e-81},
{-19.019,5.93631944856307006e-81},
{-18.982,1.20136619278066972e-80},
{-18.945,2.42795494618641349e-80},
{-18.908,4.90019001515988635e-80},
{-18.871,9.87625523667969861e-80},
{-18.834,1.98782790101901585e-79},
{-18.797,3.99551125393066742e-79},
{-18.76,8.01997547337149650e-79},
{-18.723,1.60761049995251230e-78},
{-18.686,3.21807192554984855e-78},
{-18.649,6.43306269744545872e-78},
{-18.612,1.28424224897420110e-77},
{-18.575,2.56025522130675109e-77},
{-18.538,5.09714176394299409e-77},
{-18.501,1.01339163713347847e-76},
{-18.464,2.01203289883442697e-76},
{-18.427,3.98933037782676986e-76},
{-18.39,7.89899978708708122e-76},
{-18.353,1.56189336002072143e-75},
{-18.316,3.08416667636278048e-75},
{-18.279,6.08179103915785910e-75},
{-18.242,1.19765669747625772e-74},
{-18.205,2.35526840726621366e-74},
{-18.168,4.62546798051429809e-74},
{-18.131,9.07148050054444249e-74},
{-18.094,1.77667458991846663e-73},
{-18.057,3.47492027642262705e-73},
{-18.02,6.78717490277159420e-73},
{-17.983,1.32385519946948054e-72},
{-17.946,2.57869029699527542e-72},
{-17.909,5.01608803713683681e-72},
{-17.872,9.74402489810116480e-72},
{-17.835,1.89024848225546417e-71},
{-17.798,3.66190182432728858e-71},
{-17.761,7.08437902349692304e-71},
{-17.724,1.36868712176283142e-70},
{-17.687,2.64066848034764610e-70},
{-17.65,5.08781016012718897e-70},
{-17.613,9.78938115741819626e-70},
{-17.576,1.88099183314070938e-69},
{-17.539,3.60932442539983562e-69},
{-17.502,6.91627539762089916e-69},
{-17.465,1.32350623105731753e-68},
{-17.428,2.52922266673283559e-68},
{-17.391,4.82675784293302161e-68},
{-17.354,9.19880336234647844e-68},
{-17.317,1.75071134632887433e-67},
{-17.28,3.32740107372126860e-67},
{-17.243,6.31543342740021361e-67},
{-17.206,1.19703977651324071e-66},
{-17.169,2.26579921378041122e-66},
{-17.132,4.28293703345642075e-66},
{-17.095,8.08480209887281590e-66},
{-17.058,1.52406869439841631e-65},
{-17.021,2.86910963806739844e-65},
{-16.984,5.39382942382043579e-65},
{-16.947,1.01263921597172690e-64},
{-16.91,1.89854001496914751e-64},
{-16.873,3.55461243419138393e-64},
{-16.836,6.64618235128064688e-64},
{-16.799,1.24096563524576740e-63},
{-16.762,2.31395426911536565e-63},
{-16.725,4.30880967523097377e-63},
{-16.688,8.01248782958807122e-63},
{-16.651,1.48793854934464526e-62},
{-16.614,2.75937139887380593e-62},
{-16.577,5.11025863519793044e-62},
{-16.54,9.45111769836784990e-62},
{-16.503,1.74554496389999267e-61},
{-16.466,3.21948566990354569e-61},
{-16.429,5.92992975723961829e-61},
{-16.392,1.09073740725922640e-60},
{-16.355,2.00354214350490204e-60},
{-16.318,3.67522880422797835e-60},
{-16.281,6.73252408999892794e-60},
{-16.244,1.23162669963255237e-59},
{-16.207,2.25002803079325841e-59},
{-16.17,4.10491743491615615e-59},
{-16.133,7.47874280674053783e-59},
{-16.096,1.36069395104652311e-58},
{-16.059,2.47229337076738516e-58},
{-16.022,4.48587594159911888e-58},
{-15.985,8.12834685876244215e-58},
{-15.948,1.47083827103655245e-57},
{-15.911,2.65787988549730255e-57},
{-15.874,4.79637935295605875e-57},
{-15.837,8.64369541825157625e-57},
{-15.8,1.55558286895007913e-56},
{-15.763,2.79572613013537262e-56},
{-15.726,5.01769070102897331e-56},
{-15.689,8.99333864739351922e-56},
{-15.652,1.60970323428503341e-55},
{-15.615,2.87725601286943764e-55},
{-15.578,5.13592918764615799e-55},
{-15.541,9.15519060299613057e-55},
{-15.504,1.62975982144697769e-54},
{-15.467,2.89726145135784923e-54},
{-15.43,5.14351067042345168e-54},
{-15.393,9.11883777092466988e-54},
{-15.356,1.61445978840439125e-53},
{-15.319,2.85445292868987161e-53},
{-15.282,5.03995270137274902e-53},
{-15.245,8.88664781938284283e-53},
{-15.208,1.56479490407507299e-52},
{-15.171,2.75159704310372722e-52},
{-15.134,4.83192532771037560e-52},
{-15.097,8.47351446574830717e-52},
{-15.06,1.48393517530299769e-51},
{-15.023,2.59522065579499022e-51},
{-14.986,4.53254021944272657e-51},
{-14.949,7.90527666643923021e-51},
{-14.912,1.37689405143233438e-50},
{-14.875,2.39492561216950056e-50},
{-14.838,4.15998343254596646e-50},
{-14.801,7.21604534999017860e-50},
{-14.764,1.25001435382423031e-49},
{-14.727,2.16241403880861609e-49},
{-14.69,3.73568994590328278e-49},
{-14.653,6.44482200118901336e-49},
{-14.616,1.11034815716889465e-48},
{-14.579,1.91036161754463462e-48},
{-14.542,3.28231429080290893e-48},
{-14.505,5.63187398849397879e-48},
{-14.468,9.65014621474701833e-48},
{-14.431,1.65128893626413368e-47},
{-14.394,2.82176261486547501e-47},
{-14.357,4.81533071858384510e-47},
{-14.32,8.20616073455683486e-47},
{-14.283,1.39656832326897222e-46},
{-14.246,2.37351859264207935e-46},
{-14.209,4.02838885790636325e-46},
{-14.172,6.82776312453310293e-46},
{-14.135,1.15566997856664738e-45},
{-14.098,1.95342867297353528e-45},
{-14.061,3.29738486554387782e-45},
{-14.024,5.55840378909642527e-45},
{-13.987,9.35704958209216141e-45},
{-13.95,1.57302697148043884e-44},
{-13.913,2.64083838148153671e-44},
{-13.876,4.42747286807843777e-44},
{-13.839,7.41273440964039324e-44},
{-13.802,1.23939412662532554e-43},
{-13.765,2.06942125350545527e-43},
{-13.728,3.45061789275458414e-43},
{-13.691,5.74583756469023999e-43},
{-13.654,9.55472834877882066e-43},
{-13.617,1.58668927282294031e-42},
{-13.58,2.63132192896852939e-42},
{-13.543,4.35777355412000332e-42},
{-13.506,7.20715602149220477e-42},
{-13.469,1.19034210649035897e-41},
{-13.432,1.96330735421651594e-41},
{-13.395,3.23380204881487816e-41},
{-13.358,5.31921113247730148e-41},
{-13.321,8.73755055691802498e-41},
{-13.284,1.43331243134219051e-40},
{-13.247,2.34801433579314516e-40},
{-13.21,3.84122148243826697e-40},
{-13.173,6.27547639004587978e-40},
{-13.136,1.02384170240707186e-39},
{-13.099,1.66812162331494094e-39},
{-13.062,2.71413477436323584e-39},
{-13.025,4.41005418413319530e-39},
{-12.988,7.15591673816418455e-39},
{-12.951,1.15956604039087734e-38},
{-12.914,1.87643952293565962e-38},
{-12.877,3.03237249951156558e-38},
{-12.84,4.89372363684702015e-38},
{-12.803,7.88688053278997557e-38},
{-12.766,1.26934605179106791e-37},
{-12.729,2.04015790236493398e-37},
{-12.692,3.27458688593000952e-37},
{-12.655,5.24877873838718384e-37},
{-12.618,8.40173624948377398e-37},
{-12.581,1.34303977128149450e-36},
{-12.544,2.14396541365888663e-36},
{-12.507,3.41787180089208310e-36},
{-12.47,5.44130257100184717e-36},
{-12.433,8.65085668786328019e-36},
{-12.396,1.37348687653036686e-35},
{-12.359,2.17770519704254179e-35},
{-12.322,3.44812387161791099e-35},
{-12.285,5.45225112444812761e-35},
{-12.248,8.60950304755153655e-35},
{-12.211,1.35765549387253790e-34},
{-12.174,2.13801311437807774e-34},
{-12.137,3.36233093927227237e-34},
{-12.1,5.28055876743333180e-34},
{-12.063,8.28187474193365933e-34},
{-12.026,1.29713988240881105e-33},
{-11.989,2.02887068810863093e-33},
{-11.952,3.16906645896065379e-33},
{-11.915,4.94330917323991324e-33},
{-11.878,7.70040685613234409e-33},
{-11.841,1.19789586532678743e-32},
{-11.804,1.86094689347105923e-32},
{-11.767,2.88707747186651194e-32},
{-11.73,4.47293374522861327e-32},
{-11.693,6.92047791143179684e-32},
{-11.656,1.06927478994386408e-31},
{-11.619,1.64987945021626263e-31},
{-11.582,2.54228812751904269e-31},
{-11.545,3.91207364320865594e-31},
{-11.508,6.01172348128534084e-31},
{-11.471,9.22572956173218233e-31},
{-11.434,1.41387891709577807e-30},
{-11.397,2.16388172750504627e-30},
{-11.36,3.30723191222068228e-30},
{-11.323,5.04784065198797712e-30},
{-11.286,7.69407664036760676e-30},
{-11.249,1.17116285902535838e-29},
{-11.212,1.78027877702894129e-29},
{-11.175,2.70251869248095780e-29},
{-11.138,4.09693803695766029e-29},
{-11.101,6.20240485395954994e-29},
{-11.064,9.37715039140601849e-29},
{-11.027,1.41576684133231583e-28},
{-10.99,2.13463047904200329e-28},
{-10.953,3.21413282591353852e-28},
{-10.916,4.83298123784780497e-28},
{-10.879,7.25732552110238699e-28},
{-10.842,1.08829926017021316e-27},
{-10.805,1.62978505817721586e-27},
{-10.768,2.43737655162359552e-27},
{-10.731,3.64020009229946231e-27},
{-10.694,5.42923008183034278e-27},
{-10.657,8.08651939182119565e-27},
{-10.62,1.20280561243357803e-26},
{-10.583,1.78665097401371527e-26},
{-10.546,2.65029666082809749e-26},
{-10.509,3.92608580025817315e-26},
{-10.472,5.80812086769716294e-26},
{-10.435,8.58068780454271529e-26},
{-10.398,1.26595768033727897e-25},
{-10.361,1.86520658901929473e-25},
{-10.324,2.74438726720324244e-25},
{-10.287,4.03250196705990449e-25},
{-10.25,5.91717690736550911e-25},
{-10.213,8.67092299884281826e-25},
{-10.176,1.26889869967511874e-24},
{-10.139,1.85438309418060498e-24},
{-10.102,2.70634331267282905e-24},
{-10.065,3.94436663692744915e-24},
{-10.028,5.74093544668243508e-24},
{-9.991,8.34447633506442749e-24},
{-9.954,1.21122991179500145e-23},
{-9.917,1.75576021243199325e-23},
{-9.88,2.54164548995379907e-23},
{-9.843,3.67431125166550917e-23},
{-9.806,5.30454511821766772e-23},
{-9.769,7.64771387155459791e-23},
{-9.732,1.10109916811683899e-22},
{-9.695,1.58318840409101938e-22},
{-9.658,2.27326555188677041e-22},
{-9.621,3.25971168592487937e-22},
{-9.584,4.66788017793603919e-22},
{-9.547,6.67531470010187846e-22},
{-9.51,9.53312681249325299e-22},
{-9.473,1.35959832339389079e-21},
{-9.436,1.93641099897863326e-21},
{-9.399,2.75420446138759762e-21},
{-9.362,3.91206963544977785e-21},
{-9.325,5.54917965667762116e-21},
{-9.288,7.86072949038279119e-21},
{-9.251,1.11201033083704137e-20},
{-9.214,1.57096585637523733e-20},
{-9.177,2.21634147061033868e-20},
{-9.14,3.12261650872937163e-20},
{-9.103,4.39352126007018437e-20},
{-9.066,6.17332250717332538e-20},
{-9.029,8.66238344044152381e-20},
{-8.992,1.21385859475995922e-19},
{-8.955,1.69867814771843785e-19},
{-8.918,2.37392210032583837e-19},
{-8.881,3.31309769458805902e-19},
{-8.844,4.61758065798630429e-19},
{-8.807,6.42698464575677931e-19},
{-8.77,8.93331430237549472e-19},
{-8.733,1.24002545860214233e-18},
{-8.696,1.71894223185053045e-18},
{-8.659,2.37960411752096463e-18},
{-8.622,3.28973526137007865e-18},
{-8.585,4.54182142777789520e-18},
{-8.548,6.26198591396638030e-18},
{-8.511,8.62198185134991794e-18},
{-8.474,1.18553715614968370e-17},
{-8.437,1.62793231597994784e-17},
{-8.4,2.23239319728800982e-17},
{-8.363,3.05716072080526852e-17},
{-8.326,4.18099020426381960e-17},
{-8.289,5.71022724856573723e-17},
{-8.252,7.78827114107817126e-17},
{-8.215,1.06082129176641090e-16},
{-8.178,1.44296884643043639e-16},
{-8.141,1.96013196620896991e-16},
{-8.104,2.65905527909296306e-16},
{-8.067,3.60232745767494447e-16},
{-8.03,4.87363329813625392e-16},
{-7.993,6.58470645204043142e-16},
{-7.956,8.88452001610706497e-16},
{-7.919,1.19714174738992946e-15},
{-7.882,1.61091012215661921e-15},
{-7.845,2.16476744523960868e-15},
{-7.808,2.90512929106456388e-15},
{-7.771,3.89344494702923094e-15},
{-7.734,5.21095166723138573e-15},
{-7.697,6.96489485308565187e-15},
{-7.66,9.29665417833992416e-15},
{-7.623,1.23923440159075594e-14},
{-7.586,1.64966211597816196e-14},
{-7.549,2.19306436949096146e-14},
{-7.512,2.91153944973650976e-14},
{-7.475,3.86019270740297690e-14},
{-7.438,5.11105302082345651e-14},
{-7.401,6.75813662250708131e-14},
{-7.364,8.92398470776388613e-14},
{-7.327,1.17680912285076576e-13},
{-7.29,1.54977512301919215e-13},
{-7.253,2.03820041685501941e-13},
{-7.216,2.67695285121132622e-13},
{-7.179,3.51115731339915040e-13},
{-7.142,4.59912993660707289e-13},
{-7.105,6.01612698122711465e-13},
{-7.068,7.85912742615133061e-13},
{-7.031,1.02529251743892611e-12},
{-6.994,1.33578778599584950e-12},
{-6.957,1.73797479424498826e-12},
{-6.92,2.25821822741169677e-12},
{-6.883,2.93025137497287790e-12},
{-6.846,3.79717392777611155e-12},
{-6.809,4.91397398096081670e-12},
{-6.772,6.35070698797526735e-12},
{-6.735,8.19649674215020357e-12},
{-6.698,1.05645633350435766e-11},
{-6.661,1.35985321307202199e-11},
{-6.624,1.74803381299538712e-11},
{-6.587,2.24401141269907178e-11},
{-6.55,2.87685417360431236e-11},
{-6.513,3.68322552366141527e-11},
{-6.476,4.70930235204240773e-11},
{-6.439,6.01316003281768419e-11},
{-6.402,7.66773335529324101e-11},
{-6.365,9.76448679523784902e-11},
{-6.328,1.24179570842531574e-10},
{-6.291,1.57713667567174240e-10},
{-6.254,2.00035505000057316e-10},
{-6.217,2.53374881540716412e-10},
{-6.18,3.20508008137334355e-10},
{-6.143,4.04886417000176947e-10},
{-6.106,5.10795036601846115e-10},
{-6.069,6.43545731164124230e-10},
{-6.032,8.09713892738842246e-10},
{-5.995,1.01742721233265798e-9},
{-5.958,1.27671758775381867e-9},
{-5.921,1.59994930167511436e-9},
{-5.884,2.00233918380723897e-9},
{-5.847,2.50258752551779038e-9},
{-5.81,3.12364212392995545e-9},
{-5.773,3.89362208791294635e-9},
{-5.736,4.84693304664956949e-9},
{-5.699,6.02561128440226385e-9},
{-5.662,7.48094122193303226e-9},
{-5.625,9.27539873456063050e-9},
{-5.588,1.14849822196813100e-8},
{-5.551,1.42020043076246276e-8},
{-5.514,1.75384298807297413e-8},
{-5.477,2.16298608879327644e-8},
{-5.44,2.66402856099667703e-8},
{-5.403,3.27677298731525302e-8},
{-5.366,4.02509705962091766e-8},
{-5.329,4.93774983951175018e-8},
{-5.292,6.04929462218006440e-8},
{-5.255,7.40122356778755986e-8},
{-5.218,9.04327322814691686e-8},
{-5.181,1.10349746184491227e-7},
{-5.144,1.34474766308946674e-7},
{-5.107,1.63656874323163022e-7},
{-5.07,1.98907851103709076e-7},
{-5.033,2.41431563181406769e-7},
{-4.996,2.92658301069409859e-7},
{-4.959,3.54284836301305659e-7},
{-4.922,4.28321070513119798e-7},
{-4.885,5.17144269090891415e-7},
{-4.848,6.23562004936090792e-7},
{-4.811,7.50885085985329146e-7},
{-4.774,9.03011904510496975e-7},
{-4.737,1.08452582820354109e-6},
{-4.7,1.30080745391726396e-6},
{-4.663,1.55816376599235658e-6},
{-4.626,1.86397648363702531e-6},
{-4.589,2.22687214708393731e-6},
{-4.552,2.65691678141085687e-6},
{-4.515,3.16583829105754858e-6},
{-4.478,3.76728007815703668e-6},
{-4.441,4.47708974460573249e-6},
{-4.404,5.31364713189540806e-6},
{-4.367,6.29823637443075974e-6},
{-4.33,7.45546709135503533e-6},
{-4.293,8.81375031843248390e-6},
{-4.256,0.0000104058352844849451},
{-4.219,0.0000122694136649534653},
{-4.182,0.0000144477984964914404},
{-4.145,0.0000169906855085957154},
{-4.108,0.0000199550052179427686},
{-4.071,0.0000234058747343261781},
{-4.034,0.0000274176588390509967},
{-3.997,0.0000320751505115496777},
{-3.96,0.0000374748816910730294},
{-3.923,0.0000437265756597372269},
{-3.886,0.0000509547530120110370},
{-3.849,0.0000593005037237678152},
{-3.812,0.0000689234383399509740},
{-3.775,0.0000800038317511201179},
{-3.738,0.0000927449734118054170},
{-3.701,0.000107375738152626536},
{-3.664,0.000124153391937216227},
{-3.627,0.000143366646996684094},
{-3.59,0.000165338980720108076},
{-3.553,0.000190432232469868325},
{-3.516,0.000219050492105188042},
{-3.479,0.000251644293415052862},
{-3.442,0.000288715124861322488},
{-3.405,0.000330820268992719595},
{-3.368,0.000378577980588997465},
{-3.331,0.000432673012010841615},
{-3.294,0.000493862492344736737},
{-3.257,0.000562982164723996798},
{-3.22,0.000640952983660050831},
{-3.183,0.000728788071316512720},
{-3.146,0.000827600028389948841},
{-3.109,0.000938608591615960584},
{-3.072,0.00106314862589143421},
{-3.035,0.00120267843459195864},
{-2.998,0.00135878836687069668},
{-2.961,0.00153320969556000227},
{-2.924,0.00172782373377427286},
{-2.887,0.00194467115245288879},
{-2.85,0.00218596145491322490},
{-2.813,0.00245408255804093748},
{-2.776,0.00275161042307059781},
{-2.739,0.00308131867205481981},
{-2.702,0.00344618811914329573},
{-2.665,0.00384941613876137671},
{-2.628,0.00429442578576523609},
{-2.591,0.00478487457574222444},
{-2.554,0.00532466282690788939},
{-2.517,0.00591794145862599204},
{-2.48,0.00656911913554666472},
{-2.443,0.00728286864083045539},
{-2.406,0.00806413235701703102},
{-2.369,0.00891812672892344186},
{-2.332,0.00985034557963803238},
{-2.295,0.0108665621483325359},
{-2.258,0.0119728297173647409},
{-2.221,0.0131754806961046866},
{-2.184,0.0144811240301985384},
{-2.147,0.0158966408076912529},
{-2.11,0.0174291779376568635},
{-2.073,0.0190861397828177919},
{-2.036,0.0208751776351435687},
{-1.999,0.0228041769326585944},
{-1.962,0.0248812421266983095},
{-1.925,0.0271146791216493161},
{-1.888,0.0295129752237905860},
{-1.851,0.0320847765521920297},
{-1.814,0.0348388628826751482},
{-1.777,0.0377841199155193330},
{-1.74,0.0409295089788069002},
{-1.703,0.0442840342019082072},
{-1.666,0.0478567072174603646},
{-1.629,0.0516565094751043367},
{-1.592,0.0556923522760069375},
{-1.555,0.0599730346635722354},
{-1.518,0.0645071993324824329},
{-1.481,0.0693032867450246962},
{-1.444,0.0743694876702578398},
{-1.407,0.0797136943876417429},
{-1.37,0.0853434508219661292},
{-1.333,0.0912659019004407107},
{-1.296,0.0974877424453115413},
{-1.259,0.104015165936010296},
{-1.222,0.110853813493292717},
{-1.185,0.118008723453762042},
{-1.148,0.125484281916294709},
{-1.111,0.133284174651903395},
{-1.074,0.141411340775230103},
{-1.037,0.149867928578926621},
{ -1.,0.158655253931455762 } 
};


#define append (std::ios::out | std::ios::app)

template<class T>
T rerr(T data, T x0)
{
	using std::abs;
	return abs((data - x0) / x0);
}

void main3()
{
	std::ofstream fout("data_inf_int_max_err_ln.txt", std::ios::binary);
	for (size_t i = 10; i < 400; ++i)
	{
		std::cout << i << '\n';
		NF = (double)i;
		double maxerr = -INFINITY;
		for (auto&& [data, y] : vals10)
		{
			if (data >= -1.35)
				continue;
			double fx = stdnorm_cdf_nc6_basic_inf(data);
			double r2 = rerr(fx, y);
			r2 = r2 ? log2(r2) : -53;
			maxerr = std::max(maxerr, r2);
		}
		fout << i << ", " << maxerr << std::endl;
	}
}

void main4()
{
	std::ofstream fout("data_inf_int_best_n.txt", std::ios::binary);

	for (auto&& [data, y] : vals38)
	{
		size_t best_n = 0;
		double best_rerr = INFINITY;

		std::cout << data << "\n";
		for (size_t n = 1; n < 1000; ++n)
		{
			n12 = n;
			const double fx = stdnorm_cdf_nc12_basic_inf(data);
			const double e = rerr(fx, y);
			if (e < best_rerr)
			{
				best_rerr = e;
				best_n = n;
			}
		}

		fout << data << ", " << best_n << "\n";
	}
}

void main2()
{

	std::ofstream fout("data_series_err_ln.txt");
	for (int i = 0; i < 1000; ++i)
	{
		//const double fx = stdnorm_cdf_series_basic(x);
		//const double err = y - fx;
		//const double rerr = abs(err) / fx;
		//const double lrerr = log2(rerr);
		//fout << x << ", " << -ceil(rerr ? lrerr : -53) << std::endl;
	}
}

void main1()
{
	std::ofstream fout("data.txt");
	for (size_t i = 0; i < std::size(vals10); ++i)
	{
		std::cout << "i = " << i << '\n';
		auto&& [data, y] = vals10[i];
		for (N = 150; N < 3500; N += 2)
		{
			auto fx = stdnorm_cdf_nc_transformed(data);
			auto err = y - fx;
			if (err != 0)
				fout << N << ", " << (log(abs(err))) << ", " << data << "\n";
		}
	}
}


void payload_get_nc12_basic_inf_err_ln()
{
	std::ofstream fout("data_inf_int_err_ln.txt", std::ios::binary);

	for (auto&& [data, y] : vals38)
	{
		if (data >= -1.35)
			continue;
		std::cout << data << "\n";
		double fx = stdnorm_cdf_nc_transformed(data);
		double r2 = rerr(fx, y);
		fout << data << ", " << (r2 ? log2(r2) : -53) << std::endl;
	}
}

void root()
{
	const double a = 10000;
	double x = a;
	for (;;)
	{
		double x2 = x * x;
		double x1 = x * (1 - 2 * (x2 - a) / (3 * x2 + a));
		if (x1 == x)
			return;
		x = x1;
	}
}

int main()
{

	std::mt19937_64 rng;
	std::ofstream file("file.txt");
	for (uint64_t i = 0; true; ++i)
	{
		if ((i % 100000000) == 0)
			std::cout << i << '\n';
		_divround_mantissas_transformed_test(rng(), rng());
	}

	ppfloat a; //3
	a.m_exponent = ppfloat::exponent_bias + 1;
	a.m_mantissa = uint64_t(1) << 62;

	ppfloat b; //2.5
	b.m_exponent = ppfloat::exponent_bias + 1;
	b.m_mantissa = uint64_t(1) << 61;

	auto c = a / b;
	
	double fa = a, fb = b, fc = c;
	
	return 0;

	//std::reverse(std::begin(vals10), std::end(vals10));
	//std::reverse(std::begin(vals38), std::end(vals38));

	payload_get_nc12_basic_inf_err_ln();
}
